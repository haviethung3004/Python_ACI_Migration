# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Event(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.apphosting.Event")

    meta.moClassName = "apphostingEvent"
    meta.rnFormat = "event-%(key)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Application event notification."
    meta.writeAccessMask = 0x80001
    meta.readAccessMask = 0x80001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.apphosting.AppEvents")

    meta.superClasses.add("cobra.model.nw.CpSt")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('event-', True),
    ]

    prop = PropMeta("str", "appId", "appId", 68729, PropCategory.REGULAR)
    prop.label = "Unique application id that generated the event."
    prop.isOper = True
    prop.range = [(1, 64)]
    meta.props.add("appId", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eventMsg", "eventMsg", 68734, PropCategory.REGULAR)
    prop.label = "Event message received inside notification."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("eventMsg", prop)

    prop = PropMeta("str", "eventSev", "eventSev", 68738, PropCategory.REGULAR)
    prop.label = "Severity of event. e.g 'critical/major/minor'."
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "ev_sev_minor"
    prop._addConstant("ev_sev_critical", "critical-notification.", 0)
    prop._addConstant("ev_sev_major", "major-notification.", 1)
    prop._addConstant("ev_sev_minor", "minor-notification.", 2)
    meta.props.add("eventSev", prop)

    prop = PropMeta("str", "eventState", "eventState", 68736, PropCategory.REGULAR)
    prop.label = "State of event. e.g 'deployed/running'."
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "ev_state_uninstalled"
    prop._addConstant("ev_state_activated", "app-activated-notification.", 1)
    prop._addConstant("ev_state_deployed", "app-deployed-notification.", 0)
    prop._addConstant("ev_state_running", "app-running-notification.", 2)
    prop._addConstant("ev_state_stopped", "app-stopped-notification.", 3)
    prop._addConstant("ev_state_uninstalled", "app-uninstalled-notification.", 4)
    meta.props.add("eventState", prop)

    prop = PropMeta("str", "eventStatus", "eventStatus", 68737, PropCategory.REGULAR)
    prop.label = "Status of event. e.g 'pass/fail'."
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "ev_status_pass"
    prop._addConstant("ev_status_fail", "fail-status-notification.", 1)
    prop._addConstant("ev_status_pass", "pass-status-notification.", 0)
    meta.props.add("eventStatus", prop)

    prop = PropMeta("str", "eventType", "eventType", 68735, PropCategory.REGULAR)
    prop.label = "Type of event. e.g 'install/uninstall'."
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "ev_type_app_uninstall"
    prop._addConstant("ev_type_app_activate", "app-activate-notification.", 6)
    prop._addConstant("ev_type_app_deactivate", "app-deactivate-notification.", 7)
    prop._addConstant("ev_type_app_install", "app-install-notification.", 1)
    prop._addConstant("ev_type_app_no_start", "app-no-start-notification.", 4)
    prop._addConstant("ev_type_app_start", "app-start-notification.", 3)
    prop._addConstant("ev_type_app_uninstall", "app-uninstall-notification.", 2)
    prop._addConstant("ev_type_app_unsolicited", "app-unsolicited-notification.", 5)
    prop._addConstant("ev_type_caf_enable", "caf-enable-notification.", 0)
    meta.props.add("eventType", prop)

    prop = PropMeta("str", "hostName", "hostName", 68731, PropCategory.REGULAR)
    prop.label = "Host name from where the event originated."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("hostName", prop)

    prop = PropMeta("str", "key", "key", 68728, PropCategory.REGULAR)
    prop.label = "Event key index used to access event collection."
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("key", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "systemIp", "systemIp", 68733, PropCategory.REGULAR)
    prop.label = "System ip address linked with event."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("systemIp", prop)

    prop = PropMeta("str", "time", "time", 68730, PropCategory.REGULAR)
    prop.label = "Epoch time at when the event received."
    prop.isOper = True
    meta.props.add("time", prop)

    prop = PropMeta("str", "vrfName", "vrfName", 68732, PropCategory.REGULAR)
    prop.label = "Application interface vrf name."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("vrfName", prop)

    meta.namingProps.append(getattr(meta.props, "key"))

    def __init__(self, parentMoOrDn, key, markDirty=True, **creationProps):
        namingVals = [key]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
