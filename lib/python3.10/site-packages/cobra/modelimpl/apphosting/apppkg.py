# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AppPkg(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.apphosting.AppPkg")

    meta.moClassName = "apphostingAppPkg"
    meta.rnFormat = "pkg"
    meta.category = MoCategory.REGULAR
    meta.label = "Application packaging information."
    meta.writeAccessMask = 0x80001
    meta.readAccessMask = 0x80001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.apphosting.App")

    meta.superClasses.add("cobra.model.nw.CpSt")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('pkg', False),
    ]

    prop = PropMeta("str", "appAuthor", "appAuthor", 68700, PropCategory.REGULAR)
    prop.label = "Author info from application."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appAuthor", prop)

    prop = PropMeta("str", "appDesc", "appDesc", 68698, PropCategory.REGULAR)
    prop.label = "Description available in the package."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appDesc", prop)

    prop = PropMeta("str", "appName", "appName", 68695, PropCategory.REGULAR)
    prop.label = "Unique id used to host application. e.g 'nginx_1'"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appName", prop)

    prop = PropMeta("str", "appOwner", "appOwner", 68699, PropCategory.REGULAR)
    prop.label = "Name of the process which creates the application."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appOwner", prop)

    prop = PropMeta("str", "appType", "appType", 68697, PropCategory.REGULAR)
    prop.label = "Type of application. e.g. 'docker'"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appType", prop)

    prop = PropMeta("str", "appVer", "appVer", 68696, PropCategory.REGULAR)
    prop.label = "Installed version of the application."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("appVer", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "pkgName", "pkgName", 68692, PropCategory.REGULAR)
    prop.label = "Application package name."
    prop.isOper = True
    prop.range = [(1, 128)]
    meta.props.add("pkgName", prop)

    prop = PropMeta("str", "pkgPath", "pkgPath", 68693, PropCategory.REGULAR)
    prop.label = "Application package path."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("pkgPath", prop)

    prop = PropMeta("str", "pkgUrl", "pkgUrl", 68694, PropCategory.REGULAR)
    prop.label = "Application package url."
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("pkgUrl", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
