# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class OpticsZRP(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.l1.OpticsZRP")

    meta.moClassName = "l1OpticsZRP"
    meta.rnFormat = "opticszrp"
    meta.category = MoCategory.REGULAR
    meta.label = "ZRP-S Transceiver Policy"
    meta.writeAccessMask = 0x4001
    meta.readAccessMask = 0x4001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.l1.PhysIf")

    meta.superClasses.add("cobra.model.l1.AOpticsZRP")
    meta.superClasses.add("cobra.model.l1.OpticsBase")

    meta.rnPrefixes = [
        ('opticszrp', False),
    ]

    prop = PropMeta("str", "breakoutMap", "breakoutMap", 67873, PropCategory.REGULAR)
    prop.label = "Breakout Map"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no-breakout"
    prop._addConstant("100g-1x", "100g-1x", 4)
    prop._addConstant("100g-2x", "100g-2x", 3)
    prop._addConstant("100g-3x", "100g-3x", 2)
    prop._addConstant("100g-4x", "100g-4x", 1)
    prop._addConstant("no-breakout", "none", 0)
    meta.props.add("breakoutMap", prop)

    prop = PropMeta("str", "cdMax", "cdMax", 67865, PropCategory.REGULAR)
    prop.label = "Chromatic Dispersion Maximum"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(-52000, 52000)]
    prop.defaultValue = 13000
    prop.defaultValueStr = "13000"
    meta.props.add("cdMax", prop)

    prop = PropMeta("str", "cdMin", "cdMin", 67866, PropCategory.REGULAR)
    prop.label = "Chromatic Dispersion Minimum"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(-52000, 52000)]
    prop.defaultValue = -13000
    prop.defaultValueStr = "-13000"
    meta.props.add("cdMin", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dacRate", "dacRate", 67862, PropCategory.REGULAR)
    prop.label = "DAC Rate"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "1x1.25"
    prop._addConstant("1x1", "1x1", 1)
    prop._addConstant("1x1.25", "1x1.25", 2)
    meta.props.add("dacRate", prop)

    prop = PropMeta("str", "description", "description", 67844, PropCategory.REGULAR)
    prop.label = "Description for this optics"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("description", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dwdmCarrier", "dwdmCarrier", 67868, PropCategory.REGULAR)
    prop.label = "DWDM Carrier Grid Selector"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "100MHzFrequency"
    prop._addConstant("100MHzFrequency", "100mhz-frequency", 1)
    prop._addConstant("50GHzFrequency", "50ghz-frequency", 2)
    prop._addConstant("50GHzITUchannel", "50ghz-itu-channel", 3)
    prop._addConstant("50GHzWavelength", "50ghz-wavelength", 4)
    meta.props.add("dwdmCarrier", prop)

    prop = PropMeta("str", "fecMode", "fecMode", 67863, PropCategory.REGULAR)
    prop.label = "FEC Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "oFEC"
    prop._addConstant("cFEC", "cfec", 1)
    prop._addConstant("oFEC", "ofec", 2)
    meta.props.add("fecMode", prop)

    prop = PropMeta("str", "frequency100MHz", "frequency100MHz", 67869, PropCategory.REGULAR)
    prop.label = "100MHz Frequency"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1911500, 1961375)]
    prop.defaultValue = 1911500
    prop.defaultValueStr = "1911500"
    meta.props.add("frequency100MHz", prop)

    prop = PropMeta("str", "frequency50GHz", "frequency50GHz", 67870, PropCategory.REGULAR)
    prop.label = "50GHz Frequency"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(19115, 19610)]
    prop.defaultValue = 19115
    prop.defaultValueStr = "19115"
    meta.props.add("frequency50GHz", prop)

    prop = PropMeta("str", "ituChannel50GHz", "ituChannel50GHz", 67871, PropCategory.REGULAR)
    prop.label = "50GHz ITU Channel"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 100)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("ituChannel50GHz", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "modulation", "modulation", 67864, PropCategory.REGULAR)
    prop.label = "Modulation"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "16QAM"
    prop._addConstant("16QAM", "16qam", 1)
    meta.props.add("modulation", prop)

    prop = PropMeta("str", "muxponder", "muxponder", 67861, PropCategory.REGULAR)
    prop.label = "Muxponder Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "1x400"
    prop._addConstant("1x400", "1x400", 1)
    meta.props.add("muxponder", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "speed", "speed", 67860, PropCategory.REGULAR)
    prop.label = "Speed"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "400G"
    prop._addConstant("100G", "100g", 4)
    prop._addConstant("200G", "200g", 3)
    prop._addConstant("300G", "300g", 2)
    prop._addConstant("400G", "400g", 1)
    meta.props.add("speed", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "transmitPower", "transmitPower", 67867, PropCategory.REGULAR)
    prop.label = "Transmitted Power"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(-190, 50)]
    prop.defaultValue = -190
    prop.defaultValueStr = "-190"
    meta.props.add("transmitPower", prop)

    prop = PropMeta("str", "typeName", "typeName", 67845, PropCategory.REGULAR)
    prop.label = "Type Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("QDD-400G-ZR-S", "qdd-400g-zr-s", 1)
    prop._addConstant("QDD-400G-ZRP-S", "qdd-400g-zrp-s", 2)
    prop._addConstant("none", "none", 0)
    meta.props.add("typeName", prop)

    prop = PropMeta("str", "wavelength50GHz", "wavelength50GHz", 67872, PropCategory.REGULAR)
    prop.label = "50GHz Wavelength"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1528773, 1568362)]
    prop.defaultValue = 1528773
    prop.defaultValueStr = "1528773"
    meta.props.add("wavelength50GHz", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Ancestor"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("l1EthIfToEPg", "EPG", "cobra.model.fv.EPg"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
