# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PatchCtrlr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.patching.PatchCtrlr")

    meta.moClassName = "patchingPatchCtrlr"
    meta.rnFormat = "patch-%(patchReleaseVersion)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Patch for controller"
    meta.writeAccessMask = 0x4801
    meta.readAccessMask = 0x5801
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.firmware.CtrlrFwStatusCont")

    meta.superClasses.add("cobra.model.patching.APatch")

    meta.rnPrefixes = [
        ('patch-', True),
    ]

    prop = PropMeta("str", "cfgAction", "cfgAction", 63427, PropCategory.REGULAR)
    prop.label = "Configured Patch Installer Action"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("activate", "activate-patch-on-node", 1)
    prop._addConstant("deactivate", "deactivate-patch-on-node", 2)
    meta.props.add("cfgAction", prop)

    prop = PropMeta("str", "cfgBaseImageRelease", "cfgBaseImageRelease", 63426, PropCategory.REGULAR)
    prop.label = "Configured Base Image Release"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("cfgBaseImageRelease", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lastUpdateTime", "lastUpdateTime", 63632, PropCategory.REGULAR)
    prop.label = "Patch Trigger Time"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("lastUpdateTime", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "operSt", "operSt", 63430, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "down"
    prop._addConstant("activate_failed", "activate-failed", 5)
    prop._addConstant("activate_pending_reload", "activation-pending-reload", 7)
    prop._addConstant("activated", "activated", 3)
    prop._addConstant("deactivate_failed", "deactivate-failed", 6)
    prop._addConstant("deactivate_pending_reload", "deactivation-pending-reload", 8)
    prop._addConstant("deactivated", "deactivated", 4)
    prop._addConstant("down", "down", 0)
    prop._addConstant("installation-in-progress", "installation-in-progress", 1)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 63431, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "up"
    prop._addConstant("hw-compat-verification-failed", "hardware-compatibility-verification-failed", 512)
    prop._addConstant("installation-in-progress", "installation-in-progress", 262144)
    prop._addConstant("internal-error", "internal-error", 2)
    prop._addConstant("patch-activate-failed", "patch-activate-failed", 1048576)
    prop._addConstant("patch-activate-failed-on-lc", "patch-activate-successful-on-sup,-but-some-lc(s)-failed.", 64)
    prop._addConstant("patch-add-failed", "patch-add-failed", 524288)
    prop._addConstant("patch-already-exists", "patch-already-exists", 1024)
    prop._addConstant("patch-commit-failed", "patch-commit-failed", 4194304)
    prop._addConstant("patch-deactivate-failed", "patch-deactivate-failed", 2097152)
    prop._addConstant("patch-dependency-failed", "patch-requires-or-required-dependency-check-failed", 8)
    prop._addConstant("patch-download-to-repo-failed", "patch-download-or-copy-to-the-patch-repository-failed", 8388608)
    prop._addConstant("patch-install-cannot-lock-config", "patch-operation-failed-because-cannot-lock-config", 16777216)
    prop._addConstant("patch-install-no-space", "patch-operation-failed-because-there-was-not-enough-space-to-copy-the-patch-to-the-repo", 33554432)
    prop._addConstant("patch-installer-busy", "patch-operation-failed-because-system-is-not-ready.-please-try-again-later.", 131072)
    prop._addConstant("patch-not-commitable", "patch-is-not-commitable", 32768)
    prop._addConstant("patch-not-found", "patch-not-found-in-repo", 16384)
    prop._addConstant("patch-operation-aborted", "patch-operation-failed-because-operation-was-aborted", 4)
    prop._addConstant("patch-remove-failed", "patch-remove-failed-from-repo", 4096)
    prop._addConstant("patch-sign-error", "patch-operation-failed-verifying-rpm-signature", 67108864)
    prop._addConstant("patch-sync-failed-on-standby", "patch-sync-failed-on-standby", 2048)
    prop._addConstant("patch-verify-failed", "patch-md5-checksum-or-sanity-verification-failed", 16)
    prop._addConstant("patch-yum-plugin-error", "patch-operation-failed-because-plugin-returned-an-error", 65536)
    prop._addConstant("revert-link-failed-on-deactivate", "revert-link-failed-on-deactivate", 128)
    prop._addConstant("services-restart-failed", "services-restart-failed-on-activate-or-deactivate", 32)
    prop._addConstant("sw-compat-verification-failed", "software-compatibility-verification-failed", 256)
    prop._addConstant("uncommitted-patch-remove-failed", "uncomitted-patch-remove-failed-from-repo", 8192)
    prop._addConstant("up", "up", 1)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "operationFlags", "operationFlags", 63429, PropCategory.REGULAR)
    prop.label = "Patch Operation Control Flags"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("patchHotSmu", "indicates-a-hot-smu", 2)
    prop._addConstant("patchReloadImmediate", "immediate-reload-of-the-patch-install/uninstall", 0)
    prop._addConstant("patchReloadSkip", "skip-auto-reloading-node-on-patch-install/uninstall", 1)
    meta.props.add("operationFlags", prop)

    prop = PropMeta("str", "patchFileLocation", "patchFileLocation", 63425, PropCategory.REGULAR)
    prop.label = "Patch File Directory Location"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("patchFileLocation", prop)

    prop = PropMeta("str", "patchFileName", "patchFileName", 63423, PropCategory.REGULAR)
    prop.label = "Patch File Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("patchFileName", prop)

    prop = PropMeta("str", "patchReleaseVersion", "patchReleaseVersion", 63633, PropCategory.REGULAR)
    prop.label = "Patch Release version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    meta.props.add("patchReleaseVersion", prop)

    prop = PropMeta("str", "patchTriggerTime", "patchTriggerTime", 63424, PropCategory.REGULAR)
    prop.label = "Patch Trigger Time"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("patchTriggerTime", prop)

    prop = PropMeta("str", "patchType", "patchType", 63428, PropCategory.REGULAR)
    prop.label = "Patch Type"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("ctrlr-patch", "controller-patch", 2)
    prop._addConstant("switch-patch", "switch-patch", 1)
    prop._addConstant("unknown", "unknown-command", 0)
    meta.props.add("patchType", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "patchReleaseVersion"))

    def __init__(self, parentMoOrDn, patchReleaseVersion, markDirty=True, **creationProps):
        namingVals = [patchReleaseVersion]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
