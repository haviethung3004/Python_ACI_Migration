# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class ClusterCtrlr(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.comp.ClusterCtrlr")

    meta.moClassName = "compClusterCtrlr"
    meta.rnFormat = "clusterctrlr-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Cluster Controller"
    meta.writeAccessMask = 0x11
    meta.readAccessMask = 0x11
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.comp.WebhookInfo")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.comp.WebhookInfo", "webhook"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.comp.ClusterCtrlrCont")

    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")
    meta.superClasses.add("cobra.model.comp.Entity")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('clusterctrlr-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5587, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "hostOrIp", "hostOrIp", 69768, PropCategory.REGULAR)
    prop.label = "Hostname or IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("hostOrIp", prop)

    prop = PropMeta("str", "id", "id", 1003, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "issues", "issues", 34206, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("ds-update-fault", "failed-to-update-ds(data-store)-property", 4096)
    prop._addConstant("hpnic-miss-epg-fault", "hpnic-is-attached-to-an-invalid-uplink-dvs-port-group", 32)
    prop._addConstant("hv-disconnect-fault", "esx-host-is-disconnected-or-not-responding", 128)
    prop._addConstant("hv-miss-dvs-fault", "esx-host-is-configured-with-invalid-dvs", 64)
    prop._addConstant("hv-miss-pnic-fault", "esx-host-does-not-have-any-pnic", 1024)
    prop._addConstant("hv-miss-vmknic-fault", "esx-host-does-not-have-any-vmknic", 256)
    prop._addConstant("hv-update-fault", "failed-to-update-hv(-host)-property", 2)
    prop._addConstant("lnode-property-fault", "failed-to-get-dvs-property", 1)
    prop._addConstant("mgmtnic-miss-dvs-fault", "vmk-nic-is-configured-with-invalid-dvs", 512)
    prop._addConstant("none", "none", 0)
    prop._addConstant("opflex-channels-down-ave", "both-the-opflex-channels-are-down-for-ave.-please-check-the-connections-on-the-host.", 16384)
    prop._addConstant("prep-iso-file-fault", "failed-to-prepare-or-push-iso-file-for-service-vm-deployment.-please-check-if-correct-datastore-is-selected-in-policy.", 131072)
    prop._addConstant("rp-update-fault", "failed-to-update-rp(resource-pool)-property", 8192)
    prop._addConstant("tagging-cat-fault", "failed-to-retrieve-all-tag-category-information", 65536)
    prop._addConstant("tagging-tag-fault", "failed-to-retrieve-all-tag-information", 32768)
    prop._addConstant("vm-deploy-task-fault", "deployvm-task-failed-on-vcenter", 2048)
    prop._addConstant("vm-miss-hv-fault", "vm-is-attached-to-an-invalid-hv(-host)", 8)
    prop._addConstant("vm-update-fault", "failed-to-update-vm(virtual-machine)-property", 4)
    prop._addConstant("vmfolder-update-fault", "failed-to-update-vm(virtual-machine)-folder-property", 262144)
    prop._addConstant("vnic-miss-epg-fault", "vnic-is-attached-to-an-invalid-dvs-port-group-or-unable-to-communicate-with-vcenter", 16)
    meta.props.add("issues", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 69851, PropCategory.REGULAR)
    prop.label = "Monitoring policy"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 69794, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operSt", "operSt", 70036, PropCategory.REGULAR)
    prop.label = "Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("deallocated", "deallocated", 3)
    prop._addConstant("offline", "offline", 2)
    prop._addConstant("online", "online", 1)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "port", "port", 69769, PropCategory.REGULAR)
    prop.label = "Port"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("port", prop)

    prop = PropMeta("str", "pwd", "pwd", 69767, PropCategory.REGULAR)
    prop.label = "Password"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isPassword = True
    meta.props.add("pwd", prop)

    prop = PropMeta("str", "remoteErrMsg", "remoteErrMsg", 70037, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("remoteErrMsg", prop)

    prop = PropMeta("str", "remoteOperIssues", "remoteOperIssues", 70035, PropCategory.REGULAR)
    prop.label = "Remote operational issues"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("basic-lacp-not-supported", "basic-lacp-is-no-longer-supported-starting-dvs-6.6-and-above-/-vc-7.0-(for-any-dvs-version)-.-please-enable-enhanced-lacp-to-establish-lacp-connection.", 274877906944)
    prop._addConstant("connection-down", "connection-to-external-vmm-controller-is-down.", 32)
    prop._addConstant("datacenter-renamed", "datacenter-is-renamed.-please-rename-it-back-to-resume-work.", 4398046511104)
    prop._addConstant("discovery-protocol-mismatch", "discovery-protocol-on-dvs-is-different-than-the-one-in-the-policy.", 128)
    prop._addConstant("dup-logical-switches", "multiple-nsx-t-logical-switches/segments-have-the-same-name-as-the-epg-name.-keep-one-for-aci-management,-and-remove/rename-the-others.", 2199023255552)
    prop._addConstant("dup-transport-zones", "multiple-nsx-t-transport-zones-have-the-same-name-as-the-nsx-t-domain-name.-keep-one-for-aci-management-and-rename-others.", 549755813888)
    prop._addConstant("empty-transport-zone-oid", "transport-zone-creation-failed-on-nsx-t:-empty-transport-zone-uuid-in-rest-post-response.", 1099511627776)
    prop._addConstant("encapMode-mismatch", "vlan-is-set-to-none-for-port-group-on-vcenter-but-untagged-access-is-not-enabled-for-epg", 68719476736)
    prop._addConstant("event-channel-down", "event-channel-from-external-vmm-controller-is-down.", 16)
    prop._addConstant("incomplete-logical-switch-promotion", "incomplete-logical-switch-promotion-steps.-the-apimode-knob-needs-to-be-turned-as-well-as-the-logical-switch-needs-to-be-promoted-from-nsx-t-using-the-promotion-tool", 17592186044416)
    prop._addConstant("insufficient-mtu", "fabric-mtu-should-be-greater-than-1550-for-ave/avs-vmm-domain.", 134217728)
    prop._addConstant("inv-completed-ex", "last-inventory-pull-did-not-complete-for-a-few-hosts-or-vms-or-no-hosts-found.-please-verify-the-hosts-and-vms-are-in-connected-state-in-the-vmm-controller-and-manually-re-trigger-inventory-sync-on-apic.-please-ignore-this-fault-if-there-are-no-hosts-in-the-vmm-controller.", 262144)
    prop._addConstant("invalid-backing", "invalid-backing-port-group.", 2048)
    prop._addConstant("invalid-permission", "insufficient-permission-to-create/modify-port-group", 268435456)
    prop._addConstant("invalid-portgroup-exist", "invalid-or-unknown-portgroup-exist-on-external-vmm-controller", 8)
    prop._addConstant("invalid-portgroup-name", "port-group-name-size-is-exceeding-scvmm-vm-network-name-size-limit-64-character.", 4096)
    prop._addConstant("invalid-uplink-config", "uplinks-ordered-exceed-the-maxmimum-number-of-uplinks-on-the-dvs", 137438953472)
    prop._addConstant("lnode-deleted", "lnode(dvs)-deleted-on-external-vmm-controller", 1)
    prop._addConstant("lnode-name-mismatch", "lnode(dvs)-name-mismatch", 256)
    prop._addConstant("mtu-exceeded", "given-mtu-value-exceeds-or-less-than-the-supported-range-by-vmware-vcenter-which-is-1280-9000", 8589934592)
    prop._addConstant("mtu-mismatch", "mtu-on-dvs-is-different-than-the-mtu-in-the-policy.", 64)
    prop._addConstant("netflow-afto-mismatch", "netflow-vmm-exporter-active-flow-timeout-on-dvs-is-different-from-that-in-the-policy", 16777216)
    prop._addConstant("netflow-dstaddr-mismatch", "netflow-vmm-exporter-destination-address-on-dvs-is-different-from-that-in-the-policy", 2097152)
    prop._addConstant("netflow-dstport-mismatch", "netflow-vmm-exporter-destination-port-on-dvs-is-different-from-that-in-the-policy", 4194304)
    prop._addConstant("netflow-ifto-mismatch", "netflow-vmm-exporter-idle-flow-timeout-on-dvs-is-different-from-that-in-the-policy", 33554432)
    prop._addConstant("netflow-sr-mismatch", "netflow-vmm-exporter-sampling-rate-on-dvs-is-different-from-that-in-the-policy", 67108864)
    prop._addConstant("netflow-srcaddr-mismatch", "netflow-vmm-exporter-source-address-on-dvs-is-different-from-that-in-the-policy", 8388608)
    prop._addConstant("none", "none", 0)
    prop._addConstant("numofuplinks-mismatch", "number-of-uplinks-on-dvs-is-different-from-that-in-the-policy", 17179869184)
    prop._addConstant("opflex-cert-expire", "opflex-certificate-is-expiring-or-has-expired", 536870912)
    prop._addConstant("opflex-channels-down", "both-the-opflex-channels-are-down-for-the-host.-please-check-the-connections-on-the-host.", 524288)
    prop._addConstant("partial-inv", "received-partial-inventory-in-the-last-inventory-sync.-please-look-for-faults-under-vm-and-host-and-fix-them-via-vcenter,-then-manually-re-trigger-inventory-sync-on-apic", 8192)
    prop._addConstant("policy-api-unsupported-in-nsxt", "the-policy-apimode-is-unsupported-in-this-version-of-nsx-t.-please-try-deleting-and-recreating-epg-with-apimode-mgmt", 8796093022208)
    prop._addConstant("portgroup-bindingtype-mismatch", "portgroup-binding-type-on-dvs-is-different-from-that-in-the-policy", 1073741824)
    prop._addConstant("portgroup-deleted", "portgroup-deleted-from-external-vmm-controller", 4)
    prop._addConstant("portgroup-encap-changed", "portgroup-encapsulation-has-been-changed-on-external-vmm-controller", 2)
    prop._addConstant("portgroup-forgedtx-changed", "portgroup-forged-transmits-security-policy-has-been-changed-on-external-vmm-controller", 65536)
    prop._addConstant("portgroup-macchange-changed", "portgroup-mac-changes-security-policy-has-been-changed-on-external-vmm-controller", 32768)
    prop._addConstant("portgroup-netflowpref-changed", "portgroup-netflowpref-has-been-changed-on-external-vmm-controller", 1048576)
    prop._addConstant("portgroup-numports-mismatch", "portgroup-number-of-ports-on-dvs-is-different-from-that-in-the-policy", 2147483648)
    prop._addConstant("portgroup-portallocation-mismatch", "portgroup-allocation-type-on-dvs-is-different-from-that-in-the-policy", 4294967296)
    prop._addConstant("portgroup-promiscuous-changed", "portgroup-promiscuous-security-policy-has-been-changed-on-external-vmm-controller", 16384)
    prop._addConstant("portgroup-pvlan-changed", "portgroup-pvlan-encapsulation-has-been-changed-on-external-vmm-controller", 131072)
    prop._addConstant("ps-error", "powershell-vmnetwork-creation-error.", 1024)
    prop._addConstant("uplinkname-mismatch", "uplink-names-on-dvs-is-different-from-that-in-the-policy", 34359738368)
    prop._addConstant("vsmgmt-error", "vsmgmt-port-group-missing-in-controller.", 512)
    meta.props.add("remoteOperIssues", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rootContName", "rootContName", 70043, PropCategory.REGULAR)
    prop.label = "Cluster Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("rootContName", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "usr", "usr", 69766, PropCategory.REGULAR)
    prop.label = "Username"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("usr", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
