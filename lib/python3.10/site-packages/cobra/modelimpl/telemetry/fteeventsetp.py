# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class FteEventSetP(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.telemetry.FteEventSetP")

    meta.moClassName = "telemetryFteEventSetP"
    meta.rnFormat = "fteevents-%(name)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Configure FTE Events Information"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.tag.Tag")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.telemetry.FlowCollectorP")

    meta.superClasses.add("cobra.model.telemetry.AFteEvents")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('fteevents-', True),
    ]

    prop = PropMeta("str", "aclDrops", "aclDrops", 61649, PropCategory.REGULAR)
    prop.label = "Configure the capture acl-drops in fte-event-drop-events mode for FTE Event"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("aclDrops", prop)

    prop = PropMeta("str", "aclSpan", "aclSpan", 61684, PropCategory.REGULAR)
    prop.label = "Sub event configuration for acl span"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("aclSpan", prop)

    prop = PropMeta("str", "analyticsChangedBit", "analyticsChangedBit", 61642, PropCategory.REGULAR)
    prop.label = "Sub event configuration for analytics changed bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("analyticsChangedBit", prop)

    prop = PropMeta("str", "analyticsChangedCount", "analyticsChangedCount", 61664, PropCategory.REGULAR)
    prop.label = "Configure FTE Analytics Changed Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("analyticsChangedCount", prop)

    prop = PropMeta("str", "analyticsChangedLimit", "analyticsChangedLimit", 61663, PropCategory.REGULAR)
    prop.label = "Configure FTE Analytics Changed Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("analyticsChangedLimit", prop)

    prop = PropMeta("str", "annotation", "annotation", 61782, PropCategory.REGULAR)
    prop.label = "Annotation"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "blackHole", "blackHole", 61652, PropCategory.REGULAR)
    prop.label = "Configure the capture blackhole in fte-event-drop-events mode for FTE Record"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("blackHole", prop)

    prop = PropMeta("str", "bufferDrops", "bufferDrops", 61650, PropCategory.REGULAR)
    prop.label = "Configure the capture buffer-drops in fte-event-drop-events mode for FTE Record"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("bufferDrops", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 61754, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "dropFlowCount", "dropFlowCount", 61656, PropCategory.REGULAR)
    prop.label = "Configure FTE drop events flow count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32767)]
    meta.props.add("dropFlowCount", prop)

    prop = PropMeta("str", "eventExportMax", "eventExportMax", 61673, PropCategory.REGULAR)
    prop.label = "Configure FTE Event Export Max Value"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("eventExportMax", prop)

    prop = PropMeta("str", "exportFlowBit", "exportFlowBit", 61639, PropCategory.REGULAR)
    prop.label = "Sub event configuration for export flow bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("exportFlowBit", prop)

    prop = PropMeta("str", "exportFlowCount", "exportFlowCount", 61658, PropCategory.REGULAR)
    prop.label = "Configure FTE Export Flow Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("exportFlowCount", prop)

    prop = PropMeta("str", "exportFlowLimit", "exportFlowLimit", 61657, PropCategory.REGULAR)
    prop.label = "Configure FTE Export Flow Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("exportFlowLimit", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 61783, PropCategory.REGULAR)
    prop.label = "Managed By"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "firstPacketBit", "firstPacketBit", 61640, PropCategory.REGULAR)
    prop.label = "Sub event configuration for first packet bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("firstPacketBit", prop)

    prop = PropMeta("str", "firstPacketCount", "firstPacketCount", 61660, PropCategory.REGULAR)
    prop.label = "Configure FTE First Packet Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("firstPacketCount", prop)

    prop = PropMeta("str", "firstPacketLimit", "firstPacketLimit", 61659, PropCategory.REGULAR)
    prop.label = "Configure FTE First Packet Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("firstPacketLimit", prop)

    prop = PropMeta("str", "flowType", "flowType", 61687, PropCategory.REGULAR)
    prop.label = "flowType"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("flowType", prop)

    prop = PropMeta("str", "fwdDrops", "fwdDrops", 61651, PropCategory.REGULAR)
    prop.label = "Configure the capture forward-drops in fte-event-drop-events mode for FTE Record"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("fwdDrops", prop)

    prop = PropMeta("str", "groupDropEvents", "groupDropEvents", 61647, PropCategory.REGULAR)
    prop.label = "Configure the group drop events for FTE Event"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("groupDropEvents", prop)

    prop = PropMeta("str", "groupLatencyEvents", "groupLatencyEvents", 61648, PropCategory.REGULAR)
    prop.label = "Configure the group latency events for FTE Event"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("groupLatencyEvents", prop)

    prop = PropMeta("str", "latencyCount", "latencyCount", 61670, PropCategory.REGULAR)
    prop.label = "Configure FTE Latency Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("latencyCount", prop)

    prop = PropMeta("str", "latencyFlowCount", "latencyFlowCount", 61655, PropCategory.REGULAR)
    prop.label = "Configure FTE Latency events flow count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32767)]
    meta.props.add("latencyFlowCount", prop)

    prop = PropMeta("str", "latencyLimit", "latencyLimit", 61669, PropCategory.REGULAR)
    prop.label = "Configure FTE Latency Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("latencyLimit", prop)

    prop = PropMeta("str", "latencyThreshold", "latencyThreshold", 61653, PropCategory.REGULAR)
    prop.label = "Configure FTE Latency Threshold limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 65535)]
    meta.props.add("latencyThreshold", prop)

    prop = PropMeta("str", "latencyThresholdUnit", "latencyThresholdUnit", 61654, PropCategory.REGULAR)
    prop.label = "Configure FTE Latency Threshold Unit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "micro-sec"
    prop._addConstant("micro-sec", "micro-second", 0)
    prop._addConstant("milli-sec", "milli-second", 1)
    meta.props.add("latencyThresholdUnit", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mousePacketBit", "mousePacketBit", 61641, PropCategory.REGULAR)
    prop.label = "Sub event configuration for mouse packet bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("mousePacketBit", prop)

    prop = PropMeta("str", "mousePacketCount", "mousePacketCount", 61662, PropCategory.REGULAR)
    prop.label = "Configure FTE Mouse Packet Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("mousePacketCount", prop)

    prop = PropMeta("str", "mousePacketLimit", "mousePacketLimit", 61661, PropCategory.REGULAR)
    prop.label = "Configure FTE Mouse Packet Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("mousePacketLimit", prop)

    prop = PropMeta("str", "name", "name", 61760, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "packetDisposition", "packetDisposition", 61674, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDisposition", prop)

    prop = PropMeta("str", "packetDispositionIdsDrop", "packetDispositionIdsDrop", 61677, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition ids_drop"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionIdsDrop", prop)

    prop = PropMeta("str", "packetDispositionPolicingDrop", "packetDispositionPolicingDrop", 61676, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition policing_drop"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionPolicingDrop", prop)

    prop = PropMeta("str", "packetDispositionPolicyApplied", "packetDispositionPolicyApplied", 61681, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition policy_applied"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionPolicyApplied", prop)

    prop = PropMeta("str", "packetDispositionPolicyCopy", "packetDispositionPolicyCopy", 61680, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition policy_copy"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionPolicyCopy", prop)

    prop = PropMeta("str", "packetDispositionPolicyDrop", "packetDispositionPolicyDrop", 61678, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition policy_drop"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionPolicyDrop", prop)

    prop = PropMeta("str", "packetDispositionPolicyRedirect", "packetDispositionPolicyRedirect", 61679, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition policy_redirect"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionPolicyRedirect", prop)

    prop = PropMeta("str", "packetDispositionRpfPortSecFail", "packetDispositionRpfPortSecFail", 61675, PropCategory.REGULAR)
    prop.label = "Sub event configuration for packet disposition rpf_port_sec_fail"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetDispositionRpfPortSecFail", prop)

    prop = PropMeta("str", "packetLength", "packetLength", 61688, PropCategory.REGULAR)
    prop.label = "packetLength"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("packetLength", prop)

    prop = PropMeta("str", "packetValueMatchBit", "packetValueMatchBit", 61644, PropCategory.REGULAR)
    prop.label = "Sub event configuration for pkt value match bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("packetValueMatchBit", prop)

    prop = PropMeta("str", "packetValueMatchCount", "packetValueMatchCount", 61668, PropCategory.REGULAR)
    prop.label = "Configure FTE Packet Value Match Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("packetValueMatchCount", prop)

    prop = PropMeta("str", "packetValueMatchLimit", "packetValueMatchLimit", 61667, PropCategory.REGULAR)
    prop.label = "Configure FTE Packet Value Match Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("packetValueMatchLimit", prop)

    prop = PropMeta("str", "pingOfDeath", "pingOfDeath", 61683, PropCategory.REGULAR)
    prop.label = "Sub event configuration for ping of death"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("pingOfDeath", prop)

    prop = PropMeta("str", "receiveWindowZero", "receiveWindowZero", 61682, PropCategory.REGULAR)
    prop.label = "Sub event configuration for receive window zero"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("receiveWindowZero", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rttAckCount", "rttAckCount", 61672, PropCategory.REGULAR)
    prop.label = "Configure FTE RTT Ack Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("rttAckCount", prop)

    prop = PropMeta("str", "rttAckLimit", "rttAckLimit", 61671, PropCategory.REGULAR)
    prop.label = "Configure FTE RTT Ack Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("rttAckLimit", prop)

    prop = PropMeta("str", "rttSampleAckBit", "rttSampleAckBit", 61646, PropCategory.REGULAR)
    prop.label = "Sub event configuration for rtt sample ack bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("rttSampleAckBit", prop)

    prop = PropMeta("str", "rttSampleSeqBit", "rttSampleSeqBit", 61645, PropCategory.REGULAR)
    prop.label = "Sub event configuration for rtt sample seq bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("rttSampleSeqBit", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tableFullBit", "tableFullBit", 61643, PropCategory.REGULAR)
    prop.label = "Sub event configuration for table full bit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("tableFullBit", prop)

    prop = PropMeta("str", "tableFullCount", "tableFullCount", 61666, PropCategory.REGULAR)
    prop.label = "Configure FTE Table Full Bucket Count"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 32000)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("tableFullCount", prop)

    prop = PropMeta("str", "tableFullLimit", "tableFullLimit", 61665, PropCategory.REGULAR)
    prop.label = "Configure FTE Table Full Bucket Limit"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 32000)]
    meta.props.add("tableFullLimit", prop)

    prop = PropMeta("str", "ttlMatchEnable", "ttlMatchEnable", 61685, PropCategory.REGULAR)
    prop.label = "Sub event configuration for enabling ttl match"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("ttlMatchEnable", prop)

    prop = PropMeta("str", "ttlMatchValue", "ttlMatchValue", 61686, PropCategory.REGULAR)
    prop.label = "Sub event configuration for ttl match value"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("ttlMatchValue", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "userdom", "userdom", 60657, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1024)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "all"
    prop.defaultValueStr = "all"
    meta.props.add("userdom", prop)

    meta.namingProps.append(getattr(meta.props, "name"))

    def __init__(self, parentMoOrDn, name, markDirty=True, **creationProps):
        namingVals = [name]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
