# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Reconcile(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.hcloud.Reconcile")

    meta.moClassName = "hcloudReconcile"
    meta.rnFormat = "reconcile"
    meta.category = MoCategory.REGULAR
    meta.label = "reconcile"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.hcloud.ReconcileDone")
    meta.childClasses.add("cobra.model.hcloud.ReconcileTimer")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.tag.Tag")

    meta.childNamesAndRnPrefix.append(("cobra.model.hcloud.ReconcileTimer", "reconciletimer"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.hcloud.ReconcileDone", "reconciledone"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.top.Root")

    meta.rnPrefixes = [
        ('reconcile', False),
    ]

    prop = PropMeta("str", "annotation", "annotation", 60854, PropCategory.REGULAR)
    prop.label = "Annotation"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "csrConfigReconcileIsStarted", "csrConfigReconcileIsStarted", 65363, PropCategory.REGULAR)
    prop.label = "True if CSR configuration reconciliation phase is started"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("csrConfigReconcileIsStarted", prop)

    prop = PropMeta("str", "csrCumulativeDelay", "csrCumulativeDelay", 62891, PropCategory.REGULAR)
    prop.label = "Cumulative delay (in nanoseconds) for the CSR reconciliation to conclude"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("csrCumulativeDelay", prop)

    prop = PropMeta("str", "csrReconcileIsOver", "csrReconcileIsOver", 62890, PropCategory.REGULAR)
    prop.label = "True if reconciliation of CSR endpoints is over"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("csrReconcileIsOver", prop)

    prop = PropMeta("str", "csrReconcileIsStarted", "csrReconcileIsStarted", 62889, PropCategory.REGULAR)
    prop.label = "True if reconciliation of CSR endpoints is started"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("csrReconcileIsStarted", prop)

    prop = PropMeta("str", "cumulativeDelay", "cumulativeDelay", 60850, PropCategory.REGULAR)
    prop.label = "Cumulative delay (in nanoseconds) for the reconciliation to conclude"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("cumulativeDelay", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "endCsrConfigReconcileTime", "endCsrConfigReconcileTime", 65308, PropCategory.REGULAR)
    prop.label = "Time when the CSR configuration reconcile phase end"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("endCsrConfigReconcileTime", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 60855, PropCategory.REGULAR)
    prop.label = "Managed By"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "failingInventory", "failingInventory", 60847, PropCategory.REGULAR)
    prop.label = "Number of inventory drivers that are failing"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("failingInventory", prop)

    prop = PropMeta("str", "inventoryCompleted", "inventoryCompleted", 60846, PropCategory.REGULAR)
    prop.label = "Number of inventory drivers that completed first poll"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("inventoryCompleted", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "reconcileIsOver", "reconcileIsOver", 60849, PropCategory.REGULAR)
    prop.label = "True if reconciliation phase is over"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("reconcileIsOver", prop)

    prop = PropMeta("str", "reconcileIsStarted", "reconcileIsStarted", 60848, PropCategory.REGULAR)
    prop.label = "True if reconciliation phase is started"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("reconcileIsStarted", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "startCsrConfigReconcileTime", "startCsrConfigReconcileTime", 65307, PropCategory.REGULAR)
    prop.label = "Time when the CSR configuration reconcile phase started"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("startCsrConfigReconcileTime", prop)

    prop = PropMeta("str", "startCsrReconcileTime", "startCsrReconcileTime", 62892, PropCategory.REGULAR)
    prop.label = "Time when the CSR reconcile phase started"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("startCsrReconcileTime", prop)

    prop = PropMeta("str", "startReconcileTime", "startReconcileTime", 60851, PropCategory.REGULAR)
    prop.label = "Time when the reconcile phase started"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("startReconcileTime", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timeout", "timeout", 60852, PropCategory.REGULAR)
    prop.label = "Maximum acceptable delay (in nanoseconds) for reconcilation"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("timeout", prop)

    prop = PropMeta("str", "totInventoryStarted", "totInventoryStarted", 60845, PropCategory.REGULAR)
    prop.label = "Expected total number of inventory drivers"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("totInventoryStarted", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "userdom", "userdom", 60657, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1024)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "all"
    prop.defaultValueStr = "all"
    meta.props.add("userdom", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
