# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PortSummary(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.infra.PortSummary")

    meta.moClassName = "infraPortSummary"
    meta.rnFormat = "card-%(card)s-port-%(port)s-sub-%(subPort)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Port Summary Configuration"
    meta.writeAccessMask = 0x4001
    meta.readAccessMask = 0x4001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.infra.NodeSummary")

    meta.rnPrefixes = [
        ('card-', True),
        ('-port-', True),
        ('-sub-', True),
    ]

    prop = PropMeta("str", "assocGrp", "assocGrp", 65739, PropCategory.REGULAR)
    prop.label = "Associated Group DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assocGrp", prop)

    prop = PropMeta("str", "assocGrpExist", "assocGrpExist", 65887, PropCategory.REGULAR)
    prop.label = "Associated Group exists"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("assocGrpExist", prop)

    prop = PropMeta("str", "assocGrpOverride", "assocGrpOverride", 65740, PropCategory.REGULAR)
    prop.label = "Associated Group Override DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assocGrpOverride", prop)

    prop = PropMeta("str", "assocGrpOverrideExist", "assocGrpOverrideExist", 65889, PropCategory.REGULAR)
    prop.label = "Associated Group Override exists"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("assocGrpOverrideExist", prop)

    prop = PropMeta("str", "assocSubgrp", "assocSubgrp", 65814, PropCategory.REGULAR)
    prop.label = "Associated Subgroup DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assocSubgrp", prop)

    prop = PropMeta("str", "assocSubgrpExist", "assocSubgrpExist", 65888, PropCategory.REGULAR)
    prop.label = "Associated Subgroup exists"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("assocSubgrpExist", prop)

    prop = PropMeta("str", "brkoutMap", "brkoutMap", 67785, PropCategory.REGULAR)
    prop.label = "Breakout Map"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("100g-2x", "2x100g", 3)
    prop._addConstant("100g-4x", "4x100g", 5)
    prop._addConstant("10g-4x", "4x10g", 1)
    prop._addConstant("25g-4x", "4x25g", 2)
    prop._addConstant("50g-8x", "8x50g", 4)
    prop._addConstant("none", "none", 0)
    meta.props.add("brkoutMap", prop)

    prop = PropMeta("str", "card", "card", 65729, PropCategory.REGULAR)
    prop.label = "Card"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("card", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "description", "description", 65734, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("description", prop)

    prop = PropMeta("str", "direction", "direction", 68458, PropCategory.REGULAR)
    prop.label = "Port Direction"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "default"
    prop._addConstant("default", "default", 0)
    prop._addConstant("downlink", "downlink", 1)
    prop._addConstant("uplink", "uplink", 2)
    meta.props.add("direction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "fex", "fex", 65733, PropCategory.REGULAR)
    prop.label = "Connected FEX ID"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 199)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("fex", prop)

    prop = PropMeta("str", "hasOverride", "hasOverride", 65816, PropCategory.REGULAR)
    prop.label = "Has Override"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("hasOverride", prop)

    prop = PropMeta("str", "interfaceDescription", "interfaceDescription", 70990, PropCategory.REGULAR)
    prop.label = "Interface Description"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("interfaceDescription", prop)

    prop = PropMeta("str", "isMultiFexBlk", "isMultiFexBlk", 65815, PropCategory.REGULAR)
    prop.label = "Multi-Fex"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("isMultiFexBlk", prop)

    prop = PropMeta("str", "isMultiNodeBlk", "isMultiNodeBlk", 65742, PropCategory.REGULAR)
    prop.label = "Multi-Node"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("isMultiNodeBlk", prop)

    prop = PropMeta("str", "isMultiPortBlk", "isMultiPortBlk", 65743, PropCategory.REGULAR)
    prop.label = "Multi-Port"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("isMultiPortBlk", prop)

    prop = PropMeta("str", "isSystemManaged", "isSystemManaged", 68012, PropCategory.REGULAR)
    prop.label = "System Managed"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("isSystemManaged", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 65741, PropCategory.REGULAR)
    prop.label = "Associated Group Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("breakout", "breakout", 7)
    prop._addConstant("fc", "fibre-channel", 5)
    prop._addConstant("fcpc", "fc-port-channel", 6)
    prop._addConstant("fex", "fex-connected", 4)
    prop._addConstant("individual", "leaf-individual", 1)
    prop._addConstant("pc", "port-channel", 2)
    prop._addConstant("spine", "spine-individual", 8)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("vpc", "virtual-port-channel", 3)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "multiNodeList", "multiNodeList", 71070, PropCategory.REGULAR)
    prop.label = "Multi-Node List"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("multiNodeList", prop)

    prop = PropMeta("str", "node", "node", 65728, PropCategory.REGULAR)
    prop.label = "Node"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(101, 16000)]
    meta.props.add("node", prop)

    prop = PropMeta("str", "nodeSelectorDn", "nodeSelectorDn", 65737, PropCategory.REGULAR)
    prop.label = "Node Selector DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("nodeSelectorDn", prop)

    prop = PropMeta("str", "pcDescription", "pcDescription", 69192, PropCategory.REGULAR)
    prop.label = "Port-Channel Description"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("pcDescription", prop)

    prop = PropMeta("str", "pcMember", "pcMember", 71075, PropCategory.REGULAR)
    prop.label = "Port-Channel Member"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("pcMember", prop)

    prop = PropMeta("str", "pcPortDn", "pcPortDn", 65736, PropCategory.REGULAR)
    prop.label = "Port-Channel Port DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("pcPortDn", prop)

    prop = PropMeta("str", "pod", "pod", 65732, PropCategory.REGULAR)
    prop.label = "Pod"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("pod", prop)

    prop = PropMeta("str", "port", "port", 65730, PropCategory.REGULAR)
    prop.label = "Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 127)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("port", prop)

    prop = PropMeta("str", "portDn", "portDn", 65735, PropCategory.REGULAR)
    prop.label = "Port DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portDn", prop)

    prop = PropMeta("str", "portSelectorDn", "portSelectorDn", 65738, PropCategory.REGULAR)
    prop.label = "Port Selector DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portSelectorDn", prop)

    prop = PropMeta("str", "portTypeRole", "portTypeRole", 71016, PropCategory.REGULAR)
    prop.label = "Port Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "accessLeaf"
    prop._addConstant("accessLeaf", "access-leaf", 0)
    prop._addConstant("accessSpine", "access-spine", 1)
    prop._addConstant("fabricLeaf", "fabric-leaf", 2)
    prop._addConstant("fabricSpine", "fabric-spine", 3)
    meta.props.add("portTypeRole", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "shutdown", "shutdown", 67510, PropCategory.REGULAR)
    prop.label = "Port shutdown"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("shutdown", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "subPort", "subPort", 65731, PropCategory.REGULAR)
    prop.label = "SubPort"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("subPort", prop)

    prop = PropMeta("str", "uiMode", "uiMode", 71017, PropCategory.REGULAR)
    prop.label = "Port Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("breakout", "breakout", 7)
    prop._addConstant("fc", "fibre-channel", 5)
    prop._addConstant("fcpc", "fc-port-channel", 6)
    prop._addConstant("fex", "fex-connected", 4)
    prop._addConstant("individual", "individual", 1)
    prop._addConstant("pc", "port-channel", 2)
    prop._addConstant("undefined", "undefined", 0)
    prop._addConstant("vpc", "virtual-port-channel", 3)
    meta.props.add("uiMode", prop)

    meta.namingProps.append(getattr(meta.props, "card"))
    meta.namingProps.append(getattr(meta.props, "port"))
    meta.namingProps.append(getattr(meta.props, "subPort"))

    def __init__(self, parentMoOrDn, card, port, subPort, markDirty=True, **creationProps):
        namingVals = [card, port, subPort]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
