# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class FailedAutoUpgrade(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.infra.FailedAutoUpgrade")

    meta.moClassName = "infraFailedAutoUpgrade"
    meta.rnFormat = "failedAutoUpgrade-%(failedReason)s-%(peerId)s-%(peerVersion)s-%(clusterVersion)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Failed Auto Upgrade"
    meta.writeAccessMask = 0x2001
    meta.readAccessMask = 0x2001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.infra.LoNode")

    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('failedAutoUpgrade-', True),
        ('-', True),
        ('-', True),
        ('-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "clusterVersion", "clusterVersion", 67949, PropCategory.REGULAR)
    prop.label = "Cluster Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("clusterVersion", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "failedDetail", "failedDetail", 67951, PropCategory.REGULAR)
    prop.label = "Auto Upgrade Detail Message"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("failedDetail", prop)

    prop = PropMeta("str", "failedReason", "failedReason", 67950, PropCategory.REGULAR)
    prop.label = "Auto Upgrade Reason"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.defaultValue = 0
    prop.defaultValueStr = "no_image_for_upgrade"
    prop._addConstant("failed_copy_image_to_remote", "failed-to-copy-new-image-to-remote-box", 1)
    prop._addConstant("failed_run_auto_upgrade_on_remote", "failed-to-run-auto_upgrade-on-remote-box", 2)
    prop._addConstant("more_than_one_different_version_apics", "there-are-more-than-1-apics-with-different-version", 3)
    prop._addConstant("no_image_for_upgrade", "there-is-no-image-for-upgrade", 0)
    meta.props.add("failedReason", prop)

    prop = PropMeta("str", "frstTs", "frstTs", 67952, PropCategory.REGULAR)
    prop.label = "First Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "zerotime"
    prop._addConstant("zerotime", "zero-time", 0)
    meta.props.add("frstTs", prop)

    prop = PropMeta("str", "isFault", "isFault", 67954, PropCategory.REGULAR)
    prop.label = "Is Fault"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("isFault", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "lstTs", "lstTs", 67953, PropCategory.REGULAR)
    prop.label = "Last Timestamp"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "zerotime"
    prop._addConstant("zerotime", "zero-time", 0)
    meta.props.add("lstTs", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 67985, PropCategory.REGULAR)
    prop.label = "Monitoring policy"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 67946, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "peerId", "peerId", 67947, PropCategory.REGULAR)
    prop.label = "Fault Controller ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("local", "local", 255)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("peerId", prop)

    prop = PropMeta("str", "peerVersion", "peerVersion", 67948, PropCategory.REGULAR)
    prop.label = "Fault Contorller Version"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 512)]
    prop.defaultValue = "0"
    prop.defaultValueStr = "0"
    meta.props.add("peerVersion", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    meta.namingProps.append(getattr(meta.props, "failedReason"))
    meta.namingProps.append(getattr(meta.props, "peerId"))
    meta.namingProps.append(getattr(meta.props, "peerVersion"))
    meta.namingProps.append(getattr(meta.props, "clusterVersion"))

    def __init__(self, parentMoOrDn, failedReason, peerId, peerVersion, clusterVersion, markDirty=True, **creationProps):
        namingVals = [failedReason, peerId, peerVersion, clusterVersion]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
