# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class PortConfig(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.infra.PortConfig")

    meta.moClassName = "infraPortConfig"
    meta.rnFormat = "portconfnode-%(node)s-card-%(card)s-port-%(port)s-sub-%(subPort)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Port Configuration"
    meta.writeAccessMask = 0x4001
    meta.readAccessMask = 0x4001
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.aaa.RbacAnnotation")
    meta.childClasses.add("cobra.model.tag.Annotation")
    meta.childClasses.add("cobra.model.tag.Tag")

    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Annotation", "annotationKey-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.aaa.RbacAnnotation", "rbacDom-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.tag.Tag", "tagKey-"))

    meta.parentClasses.add("cobra.model.infra.Infra")

    meta.rnPrefixes = [
        ('portconfnode-', True),
        ('-card-', True),
        ('-port-', True),
        ('-sub-', True),
    ]

    prop = PropMeta("str", "action", "action", 70186, PropCategory.REGULAR)
    prop.label = "Configuration Action"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "configure"
    prop._addConstant("configure", "configure", 0)
    prop._addConstant("unconfigure", "unconfigure", 1)
    meta.props.add("action", prop)

    prop = PropMeta("str", "annotation", "annotation", 65837, PropCategory.REGULAR)
    prop.label = "Annotation"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("annotation", prop)

    prop = PropMeta("str", "assocGrp", "assocGrp", 65824, PropCategory.REGULAR)
    prop.label = "Associated Group DN"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("assocGrp", prop)

    prop = PropMeta("str", "brkoutMap", "brkoutMap", 65823, PropCategory.REGULAR)
    prop.label = "Breakout Map"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("100g-2x", "2x100g", 3)
    prop._addConstant("100g-4x", "4x100g", 5)
    prop._addConstant("10g-4x", "4x10g", 1)
    prop._addConstant("25g-4x", "4x25g", 2)
    prop._addConstant("50g-8x", "8x50g", 4)
    prop._addConstant("none", "none", 0)
    meta.props.add("brkoutMap", prop)

    prop = PropMeta("str", "card", "card", 65818, PropCategory.REGULAR)
    prop.label = "Card"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("card", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "connectedFex", "connectedFex", 65822, PropCategory.REGULAR)
    prop.label = "Connected FEX ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 199)]
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("connectedFex", prop)

    prop = PropMeta("str", "description", "description", 65821, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("description", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "extMngdBy", "extMngdBy", 65838, PropCategory.REGULAR)
    prop.label = "Managed By"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "undefined"
    prop._addConstant("msc", "msc", 1)
    prop._addConstant("undefined", "undefined", 0)
    meta.props.add("extMngdBy", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mode", "mode", 69193, PropCategory.REGULAR)
    prop.label = "Associated Group Mode"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("breakout", "breakout", 7)
    prop._addConstant("fc", "fibre-channel", 5)
    prop._addConstant("fcpc", "fc-port-channel", 6)
    prop._addConstant("fex", "fex-connected", 4)
    prop._addConstant("individual", "leaf-individual", 1)
    prop._addConstant("pc", "port-channel", 2)
    prop._addConstant("spine", "spine-individual", 8)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("vpc", "virtual-port-channel", 3)
    meta.props.add("mode", prop)

    prop = PropMeta("str", "node", "node", 65817, PropCategory.REGULAR)
    prop.label = "Node"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(101, 16000)]
    meta.props.add("node", prop)

    prop = PropMeta("str", "operationalAssocGrp", "operationalAssocGrp", 65828, PropCategory.REGULAR)
    prop.label = "Operational Associated Group DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("operationalAssocGrp", prop)

    prop = PropMeta("str", "operationalAssocSubGrp", "operationalAssocSubGrp", 65829, PropCategory.REGULAR)
    prop.label = "Operational Associated SubGroup DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("operationalAssocSubGrp", prop)

    prop = PropMeta("str", "pcMember", "pcMember", 65825, PropCategory.REGULAR)
    prop.label = "Port-Channel Member"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("pcMember", prop)

    prop = PropMeta("str", "pcPortDn", "pcPortDn", 65827, PropCategory.REGULAR)
    prop.label = "Port-Channel Port DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("pcPortDn", prop)

    prop = PropMeta("str", "port", "port", 65819, PropCategory.REGULAR)
    prop.label = "Port"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(1, 127)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("port", prop)

    prop = PropMeta("str", "portDn", "portDn", 65826, PropCategory.REGULAR)
    prop.label = "Port DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portDn", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "role", "role", 65890, PropCategory.REGULAR)
    prop.label = "Port Role"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "leaf"
    prop._addConstant("leaf", "leaf-port", 0)
    prop._addConstant("spine", "spine-port", 1)
    meta.props.add("role", prop)

    prop = PropMeta("str", "shutdown", "shutdown", 65840, PropCategory.REGULAR)
    prop.label = "Port shutdown"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("shutdown", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "subPort", "subPort", 65820, PropCategory.REGULAR)
    prop.label = "SubPort"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("subPort", prop)

    prop = PropMeta("str", "uid", "uid", 8, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("uid", prop)

    prop = PropMeta("str", "userdom", "userdom", 60657, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1024)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    prop.defaultValue = "all"
    prop.defaultValueStr = "all"
    meta.props.add("userdom", prop)

    meta.namingProps.append(getattr(meta.props, "node"))
    meta.namingProps.append(getattr(meta.props, "card"))
    meta.namingProps.append(getattr(meta.props, "port"))
    meta.namingProps.append(getattr(meta.props, "subPort"))

    def __init__(self, parentMoOrDn, node, card, port, subPort, markDirty=True, **creationProps):
        namingVals = [node, card, port, subPort]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
