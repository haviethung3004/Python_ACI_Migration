# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class UsdSoftwareData(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.pie.UsdSoftwareData")

    meta.moClassName = "pieUsdSoftwareData"
    meta.rnFormat = "software_data"
    meta.category = MoCategory.REGULAR
    meta.label = "USD Software data for the given usd port"
    meta.writeAccessMask = 0x12001
    meta.readAccessMask = 0x12001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.pie.LinkDownEvent")
    meta.parentClasses.add("cobra.model.pie.LinkFlapEvent")

    meta.rnPrefixes = [
        ('software_data', False),
    ]

    prop = PropMeta("str", "adminState", "adminState", 64168, PropCategory.REGULAR)
    prop.label = "Admin state value for the given USD port"
    prop.isOper = True
    meta.props.add("adminState", prop)

    prop = PropMeta("str", "bkMap", "bkMap", 64176, PropCategory.REGULAR)
    prop.label = "Operating breakout map value for the given USD port"
    prop.isOper = True
    meta.props.add("bkMap", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "duplex", "duplex", 64172, PropCategory.REGULAR)
    prop.label = "Software duplex value for the given USD port"
    prop.isOper = True
    meta.props.add("duplex", prop)

    prop = PropMeta("str", "eventId", "eventId", 64186, PropCategory.REGULAR)
    prop.label = "Event id as received from PIE"
    prop.isOper = True
    meta.props.add("eventId", prop)

    prop = PropMeta("str", "fec", "fec", 64175, PropCategory.REGULAR)
    prop.label = "Operating fec value for the given USD port"
    prop.isOper = True
    meta.props.add("fec", prop)

    prop = PropMeta("str", "glctPresent", "glctPresent", 64180, PropCategory.REGULAR)
    prop.label = "Operating glct present value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("glctPresent", prop)

    prop = PropMeta("str", "hwPortPresent", "hwPortPresent", 64184, PropCategory.REGULAR)
    prop.label = "Operating hardware port present value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("hwPortPresent", prop)

    prop = PropMeta("str", "ipg", "ipg", 64177, PropCategory.REGULAR)
    prop.label = "Operating ipg value for the given USD port"
    prop.isOper = True
    meta.props.add("ipg", prop)

    prop = PropMeta("str", "loopback", "loopback", 64171, PropCategory.REGULAR)
    prop.label = "Software loopback value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("loopback", prop)

    prop = PropMeta("str", "mdix", "mdix", 64173, PropCategory.REGULAR)
    prop.label = "Software mdix value for the given USD port"
    prop.isOper = True
    meta.props.add("mdix", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mtuvalue", "mtuvalue", 64170, PropCategory.REGULAR)
    prop.label = "Software MTU value for the given USD port"
    prop.isOper = True
    meta.props.add("mtuvalue", prop)

    prop = PropMeta("str", "operState", "operState", 64169, PropCategory.REGULAR)
    prop.label = "Oper state value for the given USD port"
    prop.isOper = True
    meta.props.add("operState", prop)

    prop = PropMeta("str", "phyPort", "phyPort", 64182, PropCategory.REGULAR)
    prop.label = "Operating phyPort value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("phyPort", prop)

    prop = PropMeta("str", "prbs", "prbs", 64178, PropCategory.REGULAR)
    prop.label = "Operating prbs value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("prbs", prop)

    prop = PropMeta("str", "purged", "purged", 64183, PropCategory.REGULAR)
    prop.label = "Operating purged value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("purged", prop)

    prop = PropMeta("str", "qsaPresent", "qsaPresent", 64181, PropCategory.REGULAR)
    prop.label = "Operating qsa present value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("qsaPresent", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "speed", "speed", 64174, PropCategory.REGULAR)
    prop.label = "Operating speed value for the given USD port"
    prop.isOper = True
    meta.props.add("speed", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timestamp", "timestamp", 64185, PropCategory.REGULAR)
    prop.label = "Time stamp for the link event"
    prop.isOper = True
    meta.props.add("timestamp", prop)

    prop = PropMeta("str", "xcvrPresent", "xcvrPresent", 64179, PropCategory.REGULAR)
    prop.label = "Operating xcvr present value for the given USD port"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("xcvrPresent", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
