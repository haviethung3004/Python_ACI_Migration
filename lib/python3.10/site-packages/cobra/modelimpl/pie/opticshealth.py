# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class OpticsHealth(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.pie.OpticsHealth")

    meta.moClassName = "pieOpticsHealth"
    meta.rnFormat = "optics_health"
    meta.category = MoCategory.REGULAR
    meta.label = "Health status of the given transceiver"
    meta.writeAccessMask = 0x12001
    meta.readAccessMask = 0x12001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.parentClasses.add("cobra.model.pie.Transceiver")

    meta.rnPrefixes = [
        ('optics_health', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eventId", "eventId", 64124, PropCategory.REGULAR)
    prop.label = "Event id as received from PIE"
    prop.isOper = True
    meta.props.add("eventId", prop)

    prop = PropMeta("str", "healthStatus", "healthStatus", 64121, PropCategory.REGULAR)
    prop.label = "Transceiver health status value"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "None"
    prop._addConstant("CurrentAlarmHighThreshold", "current-alarm-high-threshold-value", 5)
    prop._addConstant("CurrentAlarmLowThreshold", "current-low-threshold-value", 6)
    prop._addConstant("CurrentBadRange", "current-bad-range", 25)
    prop._addConstant("CurrentWarningHighThreshold", "current-warning-high-threshold-value", 15)
    prop._addConstant("CurrentWarningLowThreshold", "current-warning-low-threshold-value", 16)
    prop._addConstant("GoodEvent", "good-event-(no-negative-event)", 26)
    prop._addConstant("HealthMetricBad", "health-metric-insight-is-bad", 31)
    prop._addConstant("HealthMetricGood", "health-metric-insight-is-good", 28)
    prop._addConstant("HealthMetricModerate", "health-metric-insight-is-moderate", 29)
    prop._addConstant("HealthMetricNeedsAttention", "health-metric-insight-is-needs-attention", 30)
    prop._addConstant("InvalidEvent", "invalid-health-rca-value", 32)
    prop._addConstant("None", "no-reason", 0)
    prop._addConstant("RawXcvrDataEvent", "raw-xcvr-data-event", 27)
    prop._addConstant("RxPwrAlarmHighThreshold", "rx-power-alarm-high-threshold", 9)
    prop._addConstant("RxPwrAlarmLowThreshold", "rx-power-alarm-low-threshold", 10)
    prop._addConstant("RxPwrBadRange", "rx-power-bad-range", 24)
    prop._addConstant("RxPwrWarningHighThreshold", "rx-power-warning-high-threshold", 19)
    prop._addConstant("RxPwrWarningLowThreshold", "rx-power-warning-low-threshold", 20)
    prop._addConstant("TemperatureAlarmHighThreshold", "temperature-alarm-high-threshold", 1)
    prop._addConstant("TemperatureAlarmLowThreshold", "temperature-alarm-low-threshold", 2)
    prop._addConstant("TemperatureBadRange", "temperature-bad-range", 21)
    prop._addConstant("TemperatureWarningHighThreshold", "temperature-warning-high-threshold", 11)
    prop._addConstant("TemperatureWarningLowThreshold", "temperature-warning-low-threshold", 12)
    prop._addConstant("TxPwrAlarmHighThreshold", "tx-power-alarm-high-threshold", 7)
    prop._addConstant("TxPwrAlarmLowThreshold", "tx-power-alarm-low-threshold", 8)
    prop._addConstant("TxPwrBadRange", "tx-power-bad-range", 23)
    prop._addConstant("TxPwrWarningHighThreshold", "tx-power-warning-high-threshold", 17)
    prop._addConstant("TxPwrWarningLowThreshold", "tx-power-warning-low-threshold", 18)
    prop._addConstant("VoltageAlarmHighThreshold", "voltage-alarm-high-threshold-value", 3)
    prop._addConstant("VoltageAlarmLowThreshold", "voltage-alarm-low-threshold-value", 4)
    prop._addConstant("VoltageBadRange", "voltage-bad-range", 22)
    prop._addConstant("VoltageWarningHighThreshold", "voltage-warning-high-threshold-value", 13)
    prop._addConstant("VoltageWarningLowThreshold", "voltage-warning-low-threshold-value", 14)
    meta.props.add("healthStatus", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "reason", "reason", 64122, PropCategory.REGULAR)
    prop.label = "RCA about the health status of the transceiver"
    prop.isOper = True
    prop.range = [(0, 512)]
    meta.props.add("reason", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timestamp", "timestamp", 64123, PropCategory.REGULAR)
    prop.label = "Time stamp for the link event"
    prop.isOper = True
    meta.props.add("timestamp", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
