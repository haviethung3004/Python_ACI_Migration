# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Transceiver(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.pie.Transceiver")

    meta.moClassName = "pieTransceiver"
    meta.rnFormat = "transceiver_event-%(event)s"
    meta.category = MoCategory.REGULAR
    meta.label = "Inserted transceiver values for the given usd port"
    meta.writeAccessMask = 0x12001
    meta.readAccessMask = 0x12001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.pie.OpticsHealth")
    meta.childClasses.add("cobra.model.pie.TransceiverSensor")

    meta.childNamesAndRnPrefix.append(("cobra.model.pie.TransceiverSensor", "transceiver_sensor-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pie.OpticsHealth", "optics_health"))

    meta.parentClasses.add("cobra.model.pie.PhysicalPort")

    meta.rnPrefixes = [
        ('transceiver_event-', True),
    ]

    prop = PropMeta("str", "auxWarning", "auxWarning", 64098, PropCategory.REGULAR)
    prop.label = "AuxWarning value for the given transceiver"
    prop.isOper = True
    meta.props.add("auxWarning", prop)

    prop = PropMeta("str", "biasCurrent", "biasCurrent", 64078, PropCategory.REGULAR)
    prop.label = "BiasCurrent value for the given transceiver"
    prop.isOper = True
    meta.props.add("biasCurrent", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "event", "event", 64065, PropCategory.REGULAR)
    prop.label = "Event ID for the given property container"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("event", prop)

    prop = PropMeta("str", "fERAverage", "fERAverage", 64089, PropCategory.REGULAR)
    prop.label = "FERAverage value for the given transceiver"
    prop.isOper = True
    meta.props.add("fERAverage", prop)

    prop = PropMeta("str", "fERCurrent", "fERCurrent", 64093, PropCategory.REGULAR)
    prop.label = "FERCurrent value for the given transceiver"
    prop.isOper = True
    meta.props.add("fERCurrent", prop)

    prop = PropMeta("str", "fERMaximum", "fERMaximum", 64091, PropCategory.REGULAR)
    prop.label = "FERMaximum value for the given transceiver"
    prop.isOper = True
    meta.props.add("fERMaximum", prop)

    prop = PropMeta("str", "fERMinimum", "fERMinimum", 64090, PropCategory.REGULAR)
    prop.label = "FERMinimum value for the given transceiver"
    prop.isOper = True
    meta.props.add("fERMinimum", prop)

    prop = PropMeta("str", "fERPriorPeriod", "fERPriorPeriod", 64092, PropCategory.REGULAR)
    prop.label = "FERPriorPeriod value for the given transceiver"
    prop.isOper = True
    meta.props.add("fERPriorPeriod", prop)

    prop = PropMeta("str", "laserFrequency", "laserFrequency", 64094, PropCategory.REGULAR)
    prop.label = "LaserFrequency value for the given transceiver"
    prop.isOper = True
    meta.props.add("laserFrequency", prop)

    prop = PropMeta("str", "laserReading", "laserReading", 64079, PropCategory.REGULAR)
    prop.label = "LaserReading Temperature or Wavelength  value for the given transceiver"
    prop.isOper = True
    meta.props.add("laserReading", prop)

    prop = PropMeta("str", "laserTemperature", "laserTemperature", 64095, PropCategory.REGULAR)
    prop.label = "LaserTemperature value for the given transceiver"
    prop.isOper = True
    meta.props.add("laserTemperature", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "moduleAux1", "moduleAux1", 64102, PropCategory.REGULAR)
    prop.label = "ModuleAux1 value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleAux1", prop)

    prop = PropMeta("str", "moduleAux2", "moduleAux2", 64103, PropCategory.REGULAR)
    prop.label = "ModuleAux2 value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleAux2", prop)

    prop = PropMeta("str", "moduleAux3", "moduleAux3", 64104, PropCategory.REGULAR)
    prop.label = "ModuleAux3 value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleAux3", prop)

    prop = PropMeta("str", "moduleFaults", "moduleFaults", 64097, PropCategory.REGULAR)
    prop.label = "ModuleFaults value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleFaults", prop)

    prop = PropMeta("str", "moduleMonitorCustom", "moduleMonitorCustom", 64105, PropCategory.REGULAR)
    prop.label = "ModuleMonitorCustom value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleMonitorCustom", prop)

    prop = PropMeta("str", "moduleTemperature", "moduleTemperature", 64100, PropCategory.REGULAR)
    prop.label = "ModuleTemperature value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleTemperature", prop)

    prop = PropMeta("str", "moduleVoltage", "moduleVoltage", 64101, PropCategory.REGULAR)
    prop.label = "ModuleVoltage value for the given transceiver"
    prop.isOper = True
    meta.props.add("moduleVoltage", prop)

    prop = PropMeta("str", "pAM4LevelTransition", "pAM4LevelTransition", 64083, PropCategory.REGULAR)
    prop.label = "PAM4LevelTransition value for the given transceiver"
    prop.isOper = True
    meta.props.add("pAM4LevelTransition", prop)

    prop = PropMeta("str", "preFECBERAverage", "preFECBERAverage", 64084, PropCategory.REGULAR)
    prop.label = "PreFECBERAverage value for the given transceiver"
    prop.isOper = True
    meta.props.add("preFECBERAverage", prop)

    prop = PropMeta("str", "preFECBERCurrent", "preFECBERCurrent", 64088, PropCategory.REGULAR)
    prop.label = "PreFECBERCurrent value for the given transceiver"
    prop.isOper = True
    meta.props.add("preFECBERCurrent", prop)

    prop = PropMeta("str", "preFECBERMax", "preFECBERMax", 64086, PropCategory.REGULAR)
    prop.label = "PreFECBERMax value for the given transceiver"
    prop.isOper = True
    meta.props.add("preFECBERMax", prop)

    prop = PropMeta("str", "preFECBERMin", "preFECBERMin", 64085, PropCategory.REGULAR)
    prop.label = "PreFECBERMin value for the given transceiver"
    prop.isOper = True
    meta.props.add("preFECBERMin", prop)

    prop = PropMeta("str", "preFECBERPriorPeriod", "preFECBERPriorPeriod", 64087, PropCategory.REGULAR)
    prop.label = "PreFECBERPriorPeriod value for the given transceiver"
    prop.isOper = True
    meta.props.add("preFECBERPriorPeriod", prop)

    prop = PropMeta("str", "residualDispersion", "residualDispersion", 64082, PropCategory.REGULAR)
    prop.label = "ResidualDispersion value for the given transceiver"
    prop.isOper = True
    meta.props.add("residualDispersion", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "rxCDR", "rxCDR", 64073, PropCategory.REGULAR)
    prop.label = "RxCDR value for the given transceiver"
    prop.isOper = True
    meta.props.add("rxCDR", prop)

    prop = PropMeta("str", "rxLOS", "rxLOS", 64069, PropCategory.REGULAR)
    prop.label = "Rx LOS value for the given transceiver"
    prop.isOper = True
    meta.props.add("rxLOS", prop)

    prop = PropMeta("str", "rxPower", "rxPower", 64076, PropCategory.REGULAR)
    prop.label = "RxPower value for the given transceiver"
    prop.isOper = True
    meta.props.add("rxPower", prop)

    prop = PropMeta("str", "sNR", "sNR", 64081, PropCategory.REGULAR)
    prop.label = "SNR value for the given transceiver"
    prop.isOper = True
    meta.props.add("sNR", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tecCurrent", "tecCurrent", 64080, PropCategory.REGULAR)
    prop.label = "TecCurrent value for the given transceiver"
    prop.isOper = True
    meta.props.add("tecCurrent", prop)

    prop = PropMeta("str", "temperature", "temperature", 64074, PropCategory.REGULAR)
    prop.label = "Temperature value for the given transceiver"
    prop.isOper = True
    meta.props.add("temperature", prop)

    prop = PropMeta("str", "timestamp", "timestamp", 64066, PropCategory.REGULAR)
    prop.label = "Time stamp for the transceiver event"
    prop.isOper = True
    meta.props.add("timestamp", prop)

    prop = PropMeta("str", "transceiverType", "transceiverType", 64067, PropCategory.REGULAR)
    prop.label = "Transceiver type value for the given USD port"
    prop.isOper = True
    meta.props.add("transceiverType", prop)

    prop = PropMeta("str", "txAdaptEqFault", "txAdaptEqFault", 64070, PropCategory.REGULAR)
    prop.label = "TxAdaptEqFault value for the given transceiver"
    prop.isOper = True
    meta.props.add("txAdaptEqFault", prop)

    prop = PropMeta("str", "txCDR", "txCDR", 64072, PropCategory.REGULAR)
    prop.label = "TxCDR value for the given transceiver"
    prop.isOper = True
    meta.props.add("txCDR", prop)

    prop = PropMeta("str", "txFault", "txFault", 64071, PropCategory.REGULAR)
    prop.label = "TxFault value for the given transceiver"
    prop.isOper = True
    meta.props.add("txFault", prop)

    prop = PropMeta("str", "txLOS", "txLOS", 64068, PropCategory.REGULAR)
    prop.label = "Tx LOS value for the given transceiver"
    prop.isOper = True
    meta.props.add("txLOS", prop)

    prop = PropMeta("str", "txPower", "txPower", 64077, PropCategory.REGULAR)
    prop.label = "TxPower value for the given transceiver"
    prop.isOper = True
    meta.props.add("txPower", prop)

    prop = PropMeta("str", "vendorWarning", "vendorWarning", 64099, PropCategory.REGULAR)
    prop.label = "VendorWarning value for the given transceiver"
    prop.isOper = True
    meta.props.add("vendorWarning", prop)

    prop = PropMeta("str", "voltage", "voltage", 64075, PropCategory.REGULAR)
    prop.label = "Voltage value for the given transceiver"
    prop.isOper = True
    meta.props.add("voltage", prop)

    prop = PropMeta("str", "voltageWarnings", "voltageWarnings", 64096, PropCategory.REGULAR)
    prop.label = "VoltageWarnings value for the given transceiver"
    prop.isOper = True
    meta.props.add("voltageWarnings", prop)

    meta.namingProps.append(getattr(meta.props, "event"))

    def __init__(self, parentMoOrDn, event, markDirty=True, **creationProps):
        namingVals = [event]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
