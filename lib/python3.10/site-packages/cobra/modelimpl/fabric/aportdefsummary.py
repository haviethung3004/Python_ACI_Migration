# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class APortDefSummary(Mo):
    meta = ClassMeta("cobra.model.fabric.APortDefSummary")

    meta.isAbstract = True
    meta.moClassName = "fabricAPortDefSummary"


    meta.moClassName = "fabricAPortDefSummary"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Abstract Port Def Summary Configuration"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.concreteSubClasses.add("cobra.model.fabric.PortDefSummary")
    meta.concreteSubClasses.add("cobra.model.infra.PortDefSummary")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "assocGrp", "assocGrp", 69473, PropCategory.REGULAR)
    prop.label = "Associated Group DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("assocGrp", prop)

    prop = PropMeta("str", "card", "card", 69466, PropCategory.REGULAR)
    prop.label = "Module Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("card", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "description", "description", 69856, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("description", prop)

    prop = PropMeta("str", "descriptionOverride", "descriptionOverride", 69857, PropCategory.REGULAR)
    prop.label = "Description from Override"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("descriptionOverride", prop)

    prop = PropMeta("str", "descriptionPolicy", "descriptionPolicy", 70868, PropCategory.REGULAR)
    prop.label = "Description from Policy Group"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("descriptionPolicy", prop)

    prop = PropMeta("str", "descriptionSelector", "descriptionSelector", 70867, PropCategory.REGULAR)
    prop.label = "Description from Selector"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("descriptionSelector", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 69858, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "node", "node", 69465, PropCategory.REGULAR)
    prop.label = "Node Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16000)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("node", prop)

    prop = PropMeta("str", "pod", "pod", 69469, PropCategory.REGULAR)
    prop.label = "Pod Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 255)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("pod", prop)

    prop = PropMeta("str", "port", "port", 69467, PropCategory.REGULAR)
    prop.label = "Port Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 127)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("port", prop)

    prop = PropMeta("str", "portBlockDn", "portBlockDn", 69472, PropCategory.REGULAR)
    prop.label = "Port Block DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portBlockDn", prop)

    prop = PropMeta("str", "portDn", "portDn", 69470, PropCategory.REGULAR)
    prop.label = "Port DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portDn", prop)

    prop = PropMeta("str", "portSelectorDn", "portSelectorDn", 69471, PropCategory.REGULAR)
    prop.label = "Port Selector DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("portSelectorDn", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "subPort", "subPort", 69468, PropCategory.REGULAR)
    prop.label = "SubPort Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("subPort", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
