# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AIfPol(Mo):
    meta = ClassMeta("cobra.model.mcp.AIfPol")

    meta.isAbstract = True
    meta.moClassName = "mcpAIfPol"


    meta.moClassName = "mcpAIfPol"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x0
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.fabric.L2IfPol")
    meta.superClasses.add("cobra.model.fabric.ProtoPol")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.fabric.ProtoIfPol")

    meta.concreteSubClasses.add("cobra.model.mcp.IfPol")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 16872, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5579, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "gracePeriod", "gracePeriod", 65428, PropCategory.REGULAR)
    prop.label = "Grace Period"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 300)]
    prop.defaultValue = 3
    prop.defaultValueStr = "3"
    meta.props.add("gracePeriod", prop)

    prop = PropMeta("str", "gracePeriodMsec", "gracePeriodMsec", 65429, PropCategory.REGULAR)
    prop.label = "Grace Period"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 999)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("gracePeriodMsec", prop)

    prop = PropMeta("str", "maxPduPerVlanLimit", "maxPduPerVlanLimit", 67956, PropCategory.REGULAR)
    prop.label = "Maximum Number of VLANs"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 2000)]
    prop.defaultValue = 256
    prop.defaultValueStr = "256"
    meta.props.add("maxPduPerVlanLimit", prop)

    prop = PropMeta("str", "mcpMode", "mcpMode", 64324, PropCategory.REGULAR)
    prop.label = "Mode"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "off"
    prop._addConstant("off", "non-strict", 1)
    prop._addConstant("on", "strict", 2)
    meta.props.add("mcpMode", prop)

    prop = PropMeta("str", "mcpPduPerVlan", "mcpPduPerVlan", 67955, PropCategory.REGULAR)
    prop.label = "MCP PDU per VLAN"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "on"
    prop._addConstant("off", "disabled", 1)
    prop._addConstant("on", "enabled", 2)
    meta.props.add("mcpPduPerVlan", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "strictInitDelayTime", "strictInitDelayTime", 65425, PropCategory.REGULAR)
    prop.label = "Init Delay Time"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 1800)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("strictInitDelayTime", prop)

    prop = PropMeta("str", "strictTxFreq", "strictTxFreq", 65426, PropCategory.REGULAR)
    prop.label = "Transmission Frequency"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 300)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("strictTxFreq", prop)

    prop = PropMeta("str", "strictTxFreqMsec", "strictTxFreqMsec", 65427, PropCategory.REGULAR)
    prop.label = "Transmission Frequency"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 999)]
    prop.defaultValue = 500
    prop.defaultValueStr = "500"
    meta.props.add("strictTxFreqMsec", prop)

    # Deployment Meta
    meta.deploymentQuery = True
    meta.deploymentType = "Path"
    meta.deploymentQueryPaths.append(DeploymentPathMeta("L2IfPolToEthIf", "Interface", "cobra.model.l1.EthIf"))

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
