# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class AEpTag(Mo):
    meta = ClassMeta("cobra.model.fv.AEpTag")

    meta.isAbstract = True
    meta.moClassName = "fvAEpTag"


    meta.moClassName = "fvAEpTag"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Endpoint Tag Base Class"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x601
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = True
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fv.RsEpTagCtx")
    meta.childClasses.add("cobra.model.fv.RtToEpMacTag")

    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToEpMacTag", "rttoEpMacTag-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RsEpTagCtx", "rsepTagCtx"))

    meta.superClasses.add("cobra.model.naming.NamedIdentifiedObject")
    meta.superClasses.add("cobra.model.fv.ATp")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.fv.NwEp")

    meta.concreteSubClasses.add("cobra.model.fv.EpStMacTagDef")
    meta.concreteSubClasses.add("cobra.model.fv.EpMacTag")
    meta.concreteSubClasses.add("cobra.model.fv.EpSubnetTagDef")
    meta.concreteSubClasses.add("cobra.model.fv.EpIpTag")
    meta.concreteSubClasses.add("cobra.model.fv.EpVmmMacTagDef")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "bdDn", "bdDn", 63898, PropCategory.REGULAR)
    prop.label = "Bridge Domain DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("bdDn", prop)

    prop = PropMeta("str", "bdName", "bdName", 63897, PropCategory.REGULAR)
    prop.label = "Bridge Domain name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 64)]
    prop.regex = ['[a-zA-Z0-9_.-]+|[*]']
    meta.props.add("bdName", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "configIssues", "configIssues", 62863, PropCategory.REGULAR)
    prop.label = "Config Issues"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "none"
    prop._addConstant("bd-does-not-exist", "endpoint-is-associated-to-a-bridge-domain,-but-the-bridge-domain-does-not-exist.", 2)
    prop._addConstant("multiple-tag-selector-match", "tag(s)-matching-more-than-one-esg-tagselector.-endpoints-can-only-be-associated-to-a-single-esg-tagselector-via-tags.", 1)
    prop._addConstant("multiple-tag-selector-match-after-single-match", "tag(s)-are-now-matching-more-than-one-esg-tagselector.-the-original-match-is-still-active.-endpoints-can-only-be-associated-to-a-single-esg-tagselector-via-tags.", 8)
    prop._addConstant("none", "none", 0)
    prop._addConstant("vrf-does-not-exist", "endpoint-is-associated-to-a-vrf,-but-the-vrf-does-not-exist.", 4)
    meta.props.add("configIssues", prop)

    prop = PropMeta("str", "ctxDn", "ctxDn", 62865, PropCategory.REGULAR)
    prop.label = "VRF DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ctxDn", prop)

    prop = PropMeta("str", "ctxName", "ctxName", 62864, PropCategory.REGULAR)
    prop.label = "VRF name"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("ctxName", prop)

    prop = PropMeta("str", "debugMessage", "debugMessage", 63115, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("debugMessage", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "encap", "encap", 1775, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("encap", prop)

    prop = PropMeta("str", "id", "id", 5586, PropCategory.REGULAR)
    prop.label = "Id"
    prop.isConfig = True
    prop.isAdmin = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "ignored", "ignored", 63460, PropCategory.REGULAR)
    prop.label = "Ignored flag"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("ignored", prop)

    prop = PropMeta("str", "ip", "ip", 1773, PropCategory.REGULAR)
    prop.label = "IP Address"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("ip", prop)

    prop = PropMeta("str", "lcC", "lcC", 1772, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("802-dot-1x", "802-dot-1x", 16)
    prop._addConstant("dynamic", "dynamic", 8)
    prop._addConstant("learned", "learned", 2)
    prop._addConstant("poe", "poe", 32)
    prop._addConstant("static", "static", 4)
    prop._addConstant("vmm", "vmm", 1)
    meta.props.add("lcC", prop)

    prop = PropMeta("str", "mac", "mac", 1774, PropCategory.REGULAR)
    prop.label = "MacAddress"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "name", "name", 5577, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 16)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "selectorDefDn", "selectorDefDn", 62985, PropCategory.REGULAR)
    prop.label = "correspondent fvSelectorDef DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("selectorDefDn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "tagSelectorDn", "tagSelectorDn", 62984, PropCategory.REGULAR)
    prop.label = "correspondent fvTagSelector DN"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("tagSelectorDn", prop)

    prop = PropMeta("str", "uuid", "uuid", 1776, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 512)]
    meta.props.add("uuid", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
