# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CtxDef(Mo):
    """
    A private L3 network context belonging to a specific tenant. This is an internal representation of the context.

    """

    meta = ClassMeta("cobra.model.fv.CtxDef")

    meta.moClassName = "fvCtxDef"
    meta.rnFormat = "ctx-[%(ctxDn)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Private Network"
    meta.writeAccessMask = 0x5
    meta.readAccessMask = 0x976f
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = True

    meta.childClasses.add("cobra.model.bgp.AutoRtTargetPDef")
    meta.childClasses.add("cobra.model.bgp.CtxAfDef")
    meta.childClasses.add("cobra.model.bgp.DomainIdAllocatorDef")
    meta.childClasses.add("cobra.model.bgp.RtTargetPDef")
    meta.childClasses.add("cobra.model.cloud.BdiIdDef")
    meta.childClasses.add("cobra.model.cloud.CtxHolder")
    meta.childClasses.add("cobra.model.cloud.CtxVrfHolder")
    meta.childClasses.add("cobra.model.cloud.RtCtrlPolDef")
    meta.childClasses.add("cobra.model.cloud.SubnetVrfHolder")
    meta.childClasses.add("cobra.model.cloud.VrfRouteLeakPolDef")
    meta.childClasses.add("cobra.model.dns.LblDef")
    meta.childClasses.add("cobra.model.extdev.SDWanVpnDef")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fv.AEPgCont")
    meta.childClasses.add("cobra.model.fv.AssocBDDefCont")
    meta.childClasses.add("cobra.model.fv.AssocESg")
    meta.childClasses.add("cobra.model.fv.AssocPolicyDef")
    meta.childClasses.add("cobra.model.fv.CtxConfigIssues")
    meta.childClasses.add("cobra.model.fv.EpRetDef")
    meta.childClasses.add("cobra.model.fv.ExtConnTrack")
    meta.childClasses.add("cobra.model.fv.L3EpCont")
    meta.childClasses.add("cobra.model.fv.L3EpScanInfo")
    meta.childClasses.add("cobra.model.fv.LCtxDef")
    meta.childClasses.add("cobra.model.fv.ProtEPg")
    meta.childClasses.add("cobra.model.fv.RouteDeployDef")
    meta.childClasses.add("cobra.model.fv.RtDcToFvCtx")
    meta.childClasses.add("cobra.model.fv.RtFvCtxDef")
    meta.childClasses.add("cobra.model.fv.RtPullRemoteCtxDef")
    meta.childClasses.add("cobra.model.fv.RtSrcToCtxDef")
    meta.childClasses.add("cobra.model.fv.RtSrvCtxDef")
    meta.childClasses.add("cobra.model.fv.RtToCtxDef")
    meta.childClasses.add("cobra.model.fv.RtToFvCtxDef")
    meta.childClasses.add("cobra.model.fv.RtToFvInbCtxDef")
    meta.childClasses.add("cobra.model.fv.RtToInbCtxDef")
    meta.childClasses.add("cobra.model.fv.RtToRemoteCtxDef")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.igmp.CtxDef")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg15min")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1d")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1h")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1mo")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1qtr")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1w")
    meta.childClasses.add("cobra.model.l3.EgrBytesAg1year")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist15min")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1d")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1h")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1mo")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1qtr")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1w")
    meta.childClasses.add("cobra.model.l3.EgrBytesAgHist1year")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart15min")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1d")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1h")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1mo")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1qtr")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1w")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart1year")
    meta.childClasses.add("cobra.model.l3.EgrBytesPart5min")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist15min")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1d")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1h")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1mo")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1qtr")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1w")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist1year")
    meta.childClasses.add("cobra.model.l3.EgrBytesPartHist5min")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg15min")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1d")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1h")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1mo")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1qtr")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1w")
    meta.childClasses.add("cobra.model.l3.EgrPktsAg1year")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist15min")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1d")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1h")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1mo")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1qtr")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1w")
    meta.childClasses.add("cobra.model.l3.EgrPktsAgHist1year")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart15min")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1d")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1h")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1mo")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1qtr")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1w")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart1year")
    meta.childClasses.add("cobra.model.l3.EgrPktsPart5min")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist15min")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1d")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1h")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1mo")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1qtr")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1w")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist1year")
    meta.childClasses.add("cobra.model.l3.EgrPktsPartHist5min")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg15min")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1d")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1h")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1mo")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1qtr")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1w")
    meta.childClasses.add("cobra.model.l3.IngrBytesAg1year")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist15min")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1d")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1h")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1mo")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1qtr")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1w")
    meta.childClasses.add("cobra.model.l3.IngrBytesAgHist1year")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart15min")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1d")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1h")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1mo")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1qtr")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1w")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart1year")
    meta.childClasses.add("cobra.model.l3.IngrBytesPart5min")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist15min")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1d")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1h")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1mo")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1qtr")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1w")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist1year")
    meta.childClasses.add("cobra.model.l3.IngrBytesPartHist5min")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg15min")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1d")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1h")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1mo")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1qtr")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1w")
    meta.childClasses.add("cobra.model.l3.IngrPktsAg1year")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist15min")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1d")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1h")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1mo")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1qtr")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1w")
    meta.childClasses.add("cobra.model.l3.IngrPktsAgHist1year")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart15min")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1d")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1h")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1mo")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1qtr")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1w")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart1year")
    meta.childClasses.add("cobra.model.l3.IngrPktsPart5min")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist15min")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1d")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1h")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1mo")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1qtr")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1w")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist1year")
    meta.childClasses.add("cobra.model.l3.IngrPktsPartHist5min")
    meta.childClasses.add("cobra.model.l3ext.GlobalCtxNameDef")
    meta.childClasses.add("cobra.model.leak.AssocRouteFromToCtx")
    meta.childClasses.add("cobra.model.leak.RouteCont")
    meta.childClasses.add("cobra.model.pim.CtxDef")
    meta.childClasses.add("cobra.model.pim.IPV6CtxDef")
    meta.childClasses.add("cobra.model.snmp.CtxDef")
    meta.childClasses.add("cobra.model.telemetry.SubnetFltGrpDef")
    meta.childClasses.add("cobra.model.vz.AnyREpPCont")
    meta.childClasses.add("cobra.model.vz.CtrctEntityDef")
    meta.childClasses.add("cobra.model.vz.ResPcTagCont")

    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtPullRemoteCtxDef", "rtresolutionPullRemoteCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart15min", "CDl3IngrBytesPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1year", "CDl3IngrBytesPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist15min", "HDl3IngrBytesPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1year", "HDl3IngrBytesPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart15min", "CDl3EgrBytesPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1year", "CDl3EgrBytesPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist15min", "HDl3EgrBytesPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1year", "HDl3EgrBytesPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1qtr", "CDl3IngrBytesPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart5min", "CDl3IngrBytesPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1qtr", "HDl3IngrBytesPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist5min", "HDl3IngrBytesPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart15min", "CDl3IngrPktsPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1year", "CDl3IngrPktsPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist15min", "HDl3IngrPktsPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1year", "HDl3IngrPktsPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtSrvCtxDef", "rtanalyticsSrvCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1qtr", "CDl3EgrBytesPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart5min", "CDl3EgrBytesPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1qtr", "HDl3EgrBytesPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist5min", "HDl3EgrBytesPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart15min", "CDl3EgrPktsPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1year", "CDl3EgrPktsPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist15min", "HDl3EgrPktsPart15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1year", "HDl3EgrPktsPart1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist15min", "HDl3IngrBytesAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1year", "HDl3IngrBytesAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1mo", "CDl3IngrBytesPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1mo", "HDl3IngrBytesPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1qtr", "CDl3IngrPktsPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart5min", "CDl3IngrPktsPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1qtr", "HDl3IngrPktsPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist5min", "HDl3IngrPktsPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist15min", "HDl3EgrBytesAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1year", "HDl3EgrBytesAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1mo", "CDl3EgrBytesPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1mo", "HDl3EgrBytesPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1qtr", "CDl3EgrPktsPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart5min", "CDl3EgrPktsPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1qtr", "HDl3EgrPktsPart1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist5min", "HDl3EgrPktsPart5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg15min", "CDl3IngrBytesAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1year", "CDl3IngrBytesAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1qtr", "HDl3IngrBytesAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1d", "CDl3IngrBytesPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1h", "CDl3IngrBytesPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPart1w", "CDl3IngrBytesPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1d", "HDl3IngrBytesPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1h", "HDl3IngrBytesPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesPartHist1w", "HDl3IngrBytesPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist15min", "HDl3IngrPktsAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1year", "HDl3IngrPktsAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1mo", "CDl3IngrPktsPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1mo", "HDl3IngrPktsPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg15min", "CDl3EgrBytesAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1year", "CDl3EgrBytesAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1qtr", "HDl3EgrBytesAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1d", "CDl3EgrBytesPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1h", "CDl3EgrBytesPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPart1w", "CDl3EgrBytesPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1d", "HDl3EgrBytesPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1h", "HDl3EgrBytesPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesPartHist1w", "HDl3EgrBytesPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist15min", "HDl3EgrPktsAg15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1year", "HDl3EgrPktsAg1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1mo", "CDl3EgrPktsPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1mo", "HDl3EgrPktsPart1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1qtr", "CDl3IngrBytesAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1mo", "HDl3IngrBytesAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg15min", "CDl3IngrPktsAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1year", "CDl3IngrPktsAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1qtr", "HDl3IngrPktsAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1d", "CDl3IngrPktsPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1h", "CDl3IngrPktsPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPart1w", "CDl3IngrPktsPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1d", "HDl3IngrPktsPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1h", "HDl3IngrPktsPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsPartHist1w", "HDl3IngrPktsPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.RtCtrlPolDef", "cloudRtctrlPolDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtSrcToCtxDef", "rtspanSrcToCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1qtr", "CDl3EgrBytesAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1mo", "HDl3EgrBytesAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg15min", "CDl3EgrPktsAg15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1year", "CDl3EgrPktsAg1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1qtr", "HDl3EgrPktsAg1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1d", "CDl3EgrPktsPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1h", "CDl3EgrPktsPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPart1w", "CDl3EgrPktsPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1d", "HDl3EgrPktsPart1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1h", "HDl3EgrPktsPart1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsPartHist1w", "HDl3EgrPktsPart1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1mo", "CDl3IngrBytesAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1d", "HDl3IngrBytesAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1h", "HDl3IngrBytesAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAgHist1w", "HDl3IngrBytesAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1qtr", "CDl3IngrPktsAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1mo", "HDl3IngrPktsAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToRemoteCtxDef", "rttoRemoteCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1mo", "CDl3EgrBytesAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1d", "HDl3EgrBytesAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1h", "HDl3EgrBytesAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAgHist1w", "HDl3EgrBytesAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1qtr", "CDl3EgrPktsAg1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1mo", "HDl3EgrPktsAg1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1d", "CDl3IngrBytesAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1h", "CDl3IngrBytesAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrBytesAg1w", "CDl3IngrBytesAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1mo", "CDl3IngrPktsAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1d", "HDl3IngrPktsAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1h", "HDl3IngrPktsAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAgHist1w", "HDl3IngrPktsAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.SubnetVrfHolder", "subnetvrfholder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtFvCtxDef", "rtcloudFvCtxDef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1d", "CDl3EgrBytesAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1h", "CDl3EgrBytesAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrBytesAg1w", "CDl3EgrBytesAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1mo", "CDl3EgrPktsAg1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1d", "HDl3EgrPktsAg1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1h", "HDl3EgrPktsAg1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAgHist1w", "HDl3EgrPktsAg1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1d", "CDl3IngrPktsAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1h", "CDl3IngrPktsAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.IngrPktsAg1w", "CDl3IngrPktsAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.leak.AssocRouteFromToCtx", "assocleakrtcont-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.VrfRouteLeakPolDef", "vrfRtLeakPolDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToFvInbCtxDef", "rttoFvInbCtxDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1d", "CDl3EgrPktsAg1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1h", "CDl3EgrPktsAg1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.EgrPktsAg1w", "CDl3EgrPktsAg1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.AssocESg", "assocESgEpPDn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.leak.RouteCont", "leakroutecont-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pim.IPV6CtxDef", "pimipv6ctxpdef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.CtxVrfHolder", "ctxvrfholder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.AssocBDDefCont", "assocBddefDn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToInbCtxDef", "rtToInbCtxDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3ext.GlobalCtxNameDef", "globalctxname"))
    meta.childNamesAndRnPrefix.append(("cobra.model.extdev.SDWanVpnDef", "sdwanvpndef-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.CtxConfigIssues", "ctxcfgissues"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.ExtConnTrack", "extconntrack"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.L3EpScanInfo", "l3EpScanInfo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToFvCtxDef", "rttoFvCtxDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vz.ResPcTagCont", "resPcTagCont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.DomainIdAllocatorDef", "bgpdomainid"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RouteDeployDef", "routedeploy"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtDcToFvCtx", "rtdcToFvCtx"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vz.AnyREpPCont", "anyreppcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.CtxAfDef", "bgpCtxAfP-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.CtxHolder", "ctxholder-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.RtToCtxDef", "rttoCtxDef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.igmp.CtxDef", "igmpctxdef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.pim.CtxDef", "pimctxpdef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.telemetry.SubnetFltGrpDef", "sfltgrpdef"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.AssocPolicyDef", "rtpolicy-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.AutoRtTargetPDef", "autortp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.L3EpCont", "l3epcont"))
    meta.childNamesAndRnPrefix.append(("cobra.model.cloud.BdiIdDef", "bdiidd-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dns.LblDef", "dnslbl-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.snmp.CtxDef", "snmpctx"))
    meta.childNamesAndRnPrefix.append(("cobra.model.vz.CtrctEntityDef", "entity-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.AEPgCont", "epgDn-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.EpRetDef", "epRPol"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.ProtEPg", "prot-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.bgp.RtTargetPDef", "rtp-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fv.LCtxDef", "lCtx"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.pol.Uni")

    meta.superClasses.add("cobra.model.fv.Def")
    meta.superClasses.add("cobra.model.fv.L3Dom")
    meta.superClasses.add("cobra.model.pol.Def")
    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.DefRoot")
    meta.superClasses.add("cobra.model.fv.Dom")
    meta.superClasses.add("cobra.model.fv.ACtx")

    meta.rnPrefixes = [
        ('ctx-', True),
    ]

    prop = PropMeta("str", "bdEnforcedEnable", "bdEnforcedEnable", 32657, PropCategory.REGULAR)
    prop.label = "BD Enforcement Status"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("bdEnforcedEnable", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctxDn", "ctxDn", 1771, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("ctxDn", prop)

    prop = PropMeta("str", "descr", "descr", 5614, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "eppCount", "eppCount", 44789, PropCategory.REGULAR)
    prop.label = "Number of EpPs in this VRF deployed on the same leaf where this CtxDef is present"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("eppCount", prop)

    prop = PropMeta("str", "esgEnabled", "esgEnabled", 59543, PropCategory.REGULAR)
    prop.label = "Indicates if the ESg feautre is enabled in the VRF"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("esgEnabled", prop)

    prop = PropMeta("str", "ipDataPlaneLearning", "ipDataPlaneLearning", 44631, PropCategory.REGULAR)
    prop.label = "Data Plane Learning"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 2
    prop.defaultValueStr = "enabled"
    prop._addConstant("disabled", "disabled", 1)
    prop._addConstant("enabled", "enabled", 2)
    meta.props.add("ipDataPlaneLearning", prop)

    prop = PropMeta("str", "knwMcastAct", "knwMcastAct", 1769, PropCategory.REGULAR)
    prop.label = "Known Multicast Action"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "permit"
    prop._addConstant("deny", "deny", 0)
    prop._addConstant("permit", "permit", 1)
    meta.props.add("knwMcastAct", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "missingContent", "missingContent", 22705, PropCategory.REGULAR)
    prop.label = "Missing Content because of Version Mismatch at the time of the push"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("missingContent", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14296, PropCategory.REGULAR)
    prop.label = "Monitoring policy"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "ownerKey", "ownerKey", 15230, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerKey", prop)

    prop = PropMeta("str", "ownerTag", "ownerTag", 15231, PropCategory.REGULAR)
    prop.label = "None"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("ownerTag", prop)

    prop = PropMeta("str", "pcEnfDir", "pcEnfDir", 23112, PropCategory.REGULAR)
    prop.label = "Policy Enforcement Direction"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "egress"
    prop._addConstant("egress", "egress", 1)
    prop._addConstant("ingress", "ingress", 0)
    prop._addConstant("mixed", "mixed-policy", 2)
    meta.props.add("pcEnfDir", prop)

    prop = PropMeta("str", "pcEnfDirUpdated", "pcEnfDirUpdated", 23164, PropCategory.REGULAR)
    prop.label = "Policy Enforcement Direction Post Upgrade Status"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", "no", False)
    prop._addConstant("yes", "yes", True)
    meta.props.add("pcEnfDirUpdated", prop)

    prop = PropMeta("str", "pcEnfPref", "pcEnfPref", 1770, PropCategory.REGULAR)
    prop.label = "Policy Control Enforcement"
    prop.isConfig = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "enforced"
    prop._addConstant("enforced", "enforced", 1)
    prop._addConstant("unenforced", "unenforced", 2)
    meta.props.add("pcEnfPref", prop)

    prop = PropMeta("str", "pcTag", "pcTag", 1768, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("any", "any", 0)
    meta.props.add("pcTag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "scope", "scope", 1767, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 16777215)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("scope", prop)

    prop = PropMeta("str", "seg", "seg", 1766, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("seg", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vrfFlag", "vrfFlag", 56476, PropCategory.REGULAR)
    prop.label = "Vrf Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("multidomainExtCtx", "shadow-vrf-created-for-external-domain", 1)
    prop._addConstant("multidomainIntCtx", "shadow-internal-vrf-created-for-external-domain", 2)
    prop._addConstant("serviceIntCtx", "shadow-internal-vrf-created-for-service-l3out-cases", 3)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("vrfFlag", prop)

    prop = PropMeta("str", "vrfId", "vrfId", 61467, PropCategory.REGULAR)
    prop.label = "VRF Id"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("vrfId", prop)

    prop = PropMeta("str", "vrfIndex", "vrfIndex", 62665, PropCategory.REGULAR)
    prop.label = "VRF Index"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("vrfIndex", prop)

    meta.namingProps.append(getattr(meta.props, "ctxDn"))
    getattr(meta.props, "ctxDn").needDelimiter = True

    def __init__(self, parentMoOrDn, ctxDn, markDirty=True, **creationProps):
        namingVals = [ctxDn]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
