# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2024 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class MssP(Mo):
    """
    Mo doc not defined in techpub!!!

    """

    meta = ClassMeta("cobra.model.topoctrl.MssP")

    meta.moClassName = "topoctrlMssP"
    meta.rnFormat = "mssp"
    meta.category = MoCategory.REGULAR
    meta.label = "user defined mss policy for TCP MSS adjustment"
    meta.writeAccessMask = 0x801
    meta.readAccessMask = 0x801
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.parentClasses.add("cobra.model.topoctrl.Entity")

    meta.superClasses.add("cobra.model.pol.Obj")
    meta.superClasses.add("cobra.model.pol.Instr")
    meta.superClasses.add("cobra.model.naming.NamedObject")

    meta.rnPrefixes = [
        ('mssp', False),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "mssIPv4", "mssIPv4", 69495, PropCategory.REGULAR)
    prop.label = "MSS IPv4"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(688, 9104)]
    prop.defaultValue = 8888
    prop.defaultValueStr = "8888"
    meta.props.add("mssIPv4", prop)

    prop = PropMeta("str", "mssIPv6", "mssIPv6", 69496, PropCategory.REGULAR)
    prop.label = "MSS IPv6"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(668, 9084)]
    prop.defaultValue = 8868
    prop.defaultValueStr = "8868"
    meta.props.add("mssIPv6", prop)

    prop = PropMeta("str", "mssP", "mssP", 69494, PropCategory.REGULAR)
    prop.label = "MSS Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "disable"
    prop._addConstant("Global", "global", 3)
    prop._addConstant("MsiteRl", "rl-and-multi-site", 2)
    prop._addConstant("RlOnly", "rl-only", 1)
    prop._addConstant("disable", "disable", 0)
    meta.props.add("mssP", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "nameAlias", "nameAlias", 28417, PropCategory.REGULAR)
    prop.label = "Display Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 63)]
    prop.regex = ['[a-zA-Z0-9_.-]+']
    meta.props.add("nameAlias", prop)

    prop = PropMeta("str", "operSt", "operSt", 69185, PropCategory.REGULAR)
    prop.label = "MSS Policy Operational State"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("disabled", "disabled", 2)
    prop._addConstant("enabled", "enabled", 1)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 69186, PropCategory.REGULAR)
    prop.label = "MSS Policy Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("hwprog-fail", "hardware-programming-failed", 1)
    prop._addConstant("not-supported-gtp", "enabling-gtp-is-not-supported", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "topoctrlCfgFailedBmp", "topoctrlCfgFailedBmp", 69187, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    prop._addConstant("topoctrl:MssPdescr_failed_flag", None, 4)
    prop._addConstant("topoctrl:MssPlcOwn_failed_flag", None, 9223372036854775808)
    prop._addConstant("topoctrl:MssPmodTs_failed_flag", None, 1152921504606846976)
    prop._addConstant("topoctrl:MssPmssIPv4_failed_flag", None, 8)
    prop._addConstant("topoctrl:MssPmssIPv6_failed_flag", None, 16)
    prop._addConstant("topoctrl:MssPmssP_failed_flag", None, 32)
    prop._addConstant("topoctrl:MssPnameAlias_failed_flag", None, 2)
    prop._addConstant("topoctrl:MssPname_failed_flag", None, 1)
    meta.props.add("topoctrlCfgFailedBmp", prop)

    prop = PropMeta("str", "topoctrlCfgFailedTs", "topoctrlCfgFailedTs", 69189, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("topoctrlCfgFailedTs", prop)

    prop = PropMeta("str", "topoctrlCfgState", "topoctrlCfgState", 69188, PropCategory.REGULAR)
    prop.label = "None"
    prop.isOper = True
    meta.props.add("topoctrlCfgState", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
